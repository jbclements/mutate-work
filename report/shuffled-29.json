{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 61,
            "MutantSourceCol": 13,
            "MutantSource": "(if (hash-has-key? env s) (hash-ref env s) (error (quote interp) \\\"ZNQR: id not found ~e\\\" s))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (hash-ref env s) (error (quote interp) \\\"ZNQR: id not found ~e\\\" s))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 61,
            "MutantSourceCol": 13,
            "MutantSource": "(if (hash-has-key? env s) (hash-ref env s) (error (quote interp) \\\"ZNQR: id not found ~e\\\" s))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (hash-ref env s) (error (quote interp) \\\"ZNQR: id not found ~e\\\" s))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 67,
            "MutantSourceCol": 60,
            "MutantSource": "(if boo (interp (first (rest args)) env) (interp (first (rest (rest args))) env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (interp (first (rest args)) env) (interp (first (rest (rest args))) env))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 67,
            "MutantSourceCol": 60,
            "MutantSource": "(if boo (interp (first (rest args)) env) (interp (first (rest (rest args))) env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (interp (first (rest args)) env) (interp (first (rest (rest args))) env))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 73,
            "MutantSourceCol": 23,
            "MutantSource": "(cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args)))) (else (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 73,
            "MutantSourceCol": 23,
            "MutantSource": "(cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (#f (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 73,
            "MutantSourceCol": 23,
            "MutantSource": "(cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args)))) (else (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 73,
            "MutantSourceCol": 23,
            "MutantSource": "(cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (\u03bb ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (#t (error (quote interp) \\\"ZNQR: applying function to wrong num of args\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (#f (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (#t (error (quote prim-add) \\\"ZNQR: must add numbers only\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 100,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 100,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 100,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 100,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 100,
            "MutantSourceCol": 37,
            "MutantSource": "(+ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 100,
            "MutantSourceCol": 37,
            "MutantSource": "(+ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 107,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 107,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (#f (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 107,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 107,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (#t (error (quote prim-sub) \\\"ZNQR: must subtract numbers only\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 108,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 108,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 108,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 108,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 108,
            "MutantSourceCol": 37,
            "MutantSource": "(- (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 108,
            "MutantSourceCol": 37,
            "MutantSource": "(- (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (#f (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (#t (error (quote prim-mult) \\\"ZNQR: must multiply numbers only\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 116,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 116,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 116,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 116,
            "MutantSourceCol": 5,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 116,
            "MutantSourceCol": 37,
            "MutantSource": "(* (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 116,
            "MutantSourceCol": 37,
            "MutantSource": "(* (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) (#f (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (#f (error (quote prim-div) \\\"ZNQR: must divide nu...",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) (#t (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide numbers only\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (else (error (quote prim-div) \\\"ZNQR: must divide ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \\\"ZNQR: cannot divide by zero\\\")) (#t (error (quote prim-div) \\\"ZNQR: must divide nu...",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (positive? (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (positive? (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 52,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 66,
            "MutantSource": "(/ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 53,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 124,
            "MutantSourceCol": 66,
            "MutantSource": "(/ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 54,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (zero? (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 55,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 56,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (zero? (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 57,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #t)",
            "Result": "passed"
        },
        {
            "NumMutant": 58,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 59,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 60,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "passed"
        },
        {
            "NumMutant": 61,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 125,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 62,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 132,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 63,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 132,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) (#f (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 64,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 132,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (#f (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 65,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 132,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 66,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 132,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) (#t (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 67,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 132,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (#t (error (quote prim-lte?) \\\"ZNQR: must input numbers only for <=\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 68,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (<= (NumV-n a) (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 69,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 70,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (<= (NumV-n a) (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 71,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 72,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 73,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 74,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 75,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 133,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 76,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (> (NumV-n a) (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 77,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 78,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (> (NumV-n a) (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 79,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #t)",
            "Result": "passed"
        },
        {
            "NumMutant": 80,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 81,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 82,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 83,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 134,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 84,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 85,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) (#f (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 86,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) (#f (BoolV #t)) (else (BoolV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 87,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "Result": "failed"
        },
        {
            "NumMutant": 88,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 89,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) (#t (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 90,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) (#t (BoolV #t)) (else (BoolV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 91,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 141,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...",
            "Result": "passed"
        },
        {
            "NumMutant": 92,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (equal? (NumV-n a) (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 93,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 94,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (equal? (NumV-n a) (NumV-n b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 95,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (NumV? a) (NumV? b)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 96,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 97,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 98,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 99,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 142,
            "MutantSourceCol": 10,
            "MutantSource": "(and (NumV? a) (NumV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 100,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (equal? (StringV-str a) (StringV-str b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 101,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (StringV? a) (StringV? b)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 102,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (equal? (StringV-str a) (StringV-str b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 103,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (StringV? a) (StringV? b)) #t)",
            "Result": "passed"
        },
        {
            "NumMutant": 104,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 10,
            "MutantSource": "(and (StringV? a) (StringV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (StringV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 105,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 10,
            "MutantSource": "(and (StringV? a) (StringV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (StringV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 106,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 10,
            "MutantSource": "(and (StringV? a) (StringV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (StringV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 107,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 143,
            "MutantSourceCol": 10,
            "MutantSource": "(and (StringV? a) (StringV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (StringV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 108,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (equal? (BoolV-boo a) (BoolV-boo b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 109,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (BoolV? a) (BoolV? b)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 110,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (equal? (BoolV-boo a) (BoolV-boo b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 111,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 5,
            "MutantSource": "(and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (and (BoolV? a) (BoolV? b)) #t)",
            "Result": "passed"
        },
        {
            "NumMutant": 112,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 10,
            "MutantSource": "(and (BoolV? a) (BoolV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (BoolV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 113,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 10,
            "MutantSource": "(and (BoolV? a) (BoolV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (BoolV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 114,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 10,
            "MutantSource": "(and (BoolV? a) (BoolV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (BoolV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 115,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 144,
            "MutantSourceCol": 10,
            "MutantSource": "(and (BoolV? a) (BoolV? b))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (BoolV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 116,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 150,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))",
            "Result": "failed"
        },
        {
            "NumMutant": 117,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 150,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (empty? param) (empty? v)) env) (#f (define setting (hash-set env (first param) (first v)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 118,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 150,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))",
            "Result": "failed"
        },
        {
            "NumMutant": 119,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 150,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (empty? param) (empty? v)) env) (#t (define setting (hash-set env (first param) (first v)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 120,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 151,
            "MutantSourceCol": 5,
            "MutantSource": "(and (empty? param) (empty? v))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (empty? v))",
            "Result": "failed"
        },
        {
            "NumMutant": 121,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 151,
            "MutantSourceCol": 5,
            "MutantSource": "(and (empty? param) (empty? v))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (empty? param) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 122,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 151,
            "MutantSourceCol": 5,
            "MutantSource": "(and (empty? param) (empty? v))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (empty? v))",
            "Result": "passed"
        },
        {
            "NumMutant": 123,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 151,
            "MutantSourceCol": 5,
            "MutantSource": "(and (empty? param) (empty? v))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (empty? param) #t)",
            "Result": "passed"
        },
        {
            "NumMutant": 124,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (quote if) (quote ->) (quote =))",
            "Result": "passed"
        },
        {
            "NumMutant": 125,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (quote var) #f (quote ->) (quote =))",
            "Result": "failed"
        },
        {
            "NumMutant": 126,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (quote var) (quote if) #f (quote =))",
            "Result": "failed"
        },
        {
            "NumMutant": 127,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (quote var) (quote if) (quote ->) #f)",
            "Result": "passed"
        },
        {
            "NumMutant": 128,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (quote if) (quote ->) (quote =))",
            "Result": "passed"
        },
        {
            "NumMutant": 129,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (quote var) #t (quote ->) (quote =))",
            "Result": "passed"
        },
        {
            "NumMutant": 130,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (quote var) (quote if) #t (quote =))",
            "Result": "failed"
        },
        {
            "NumMutant": 131,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 161,
            "MutantSourceCol": 22,
            "MutantSource": "(or (quote var) (quote if) (quote ->) (quote =))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (quote var) (quote if) (quote ->) #t)",
            "Result": "passed"
        },
        {
            "NumMutant": 132,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 165,
            "MutantSourceCol": 26,
            "MutantSource": "(cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 133,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 165,
            "MutantSourceCol": 26,
            "MutantSource": "(cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (#f (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 134,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 165,
            "MutantSourceCol": 26,
            "MutantSource": "(cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 135,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 165,
            "MutantSourceCol": 26,
            "MutantSource": "(cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (#t (error (quote parse) \\\"ZNQR: check arity of ifleq0\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 136,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 171,
            "MutantSourceCol": 49,
            "MutantSource": "(if (args-same-name? (cast args (Listof Symbol))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\") (LamC (cast args (Listof Symbol)) (parse expr)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote parse) \\\"ZNQR: duplicate function arguments\\\") (LamC (cast args (Listof Symbol)) (parse expr)))",
            "Result": "failed"
        },
        {
            "NumMutant": 137,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 171,
            "MutantSourceCol": 49,
            "MutantSource": "(if (args-same-name? (cast args (Listof Symbol))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\") (LamC (cast args (Listof Symbol)) (parse expr)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote parse) \\\"ZNQR: duplicate function arguments\\\") (LamC (cast args (Listof Symbol)) (parse expr)))",
            "Result": "failed"
        },
        {
            "NumMutant": 138,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (else (desugar s)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (else (desugar s)))",
            "Result": "failed"
        },
        {
            "NumMutant": 139,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (else (desugar s)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (#f (desugar s)))",
            "Result": "failed"
        },
        {
            "NumMutant": 140,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (else (desugar s)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (else (desugar s)))",
            "Result": "failed"
        },
        {
            "NumMutant": 141,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (else (desugar s)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \\\"ZNQR: duplicate function arguments\\\")) (#t (desugar s)))",
            "Result": "passed"
        },
        {
            "NumMutant": 142,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 179,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 143,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 179,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (#f (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 144,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 179,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 145,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 179,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (#t (error (quote parse) \\\"ZNQR: check arity of binop\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 146,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 191,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) (else (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f #f) (else (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 147,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 191,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) (else (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) #f) (#f (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 148,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 191,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) (else (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t #f) (else (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 149,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 191,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) (else (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) #f) (#t (or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))",
            "Result": "passed"
        },
        {
            "NumMutant": 150,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 193,
            "MutantSourceCol": 10,
            "MutantSource": "(or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (args-same-name? (rest l)))",
            "Result": "failed"
        },
        {
            "NumMutant": 151,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 193,
            "MutantSourceCol": 10,
            "MutantSource": "(or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) #f)",
            "Result": "passed"
        },
        {
            "NumMutant": 152,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 193,
            "MutantSourceCol": 10,
            "MutantSource": "(or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (args-same-name? (rest l)))",
            "Result": "failed"
        },
        {
            "NumMutant": 153,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 193,
            "MutantSourceCol": 10,
            "MutantSource": "(or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (ormap (\u03bb ((arg : Symbol)) (equal? (first l) arg)) (rest l)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 154,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote var) i...",
            "Result": "failed"
        },
        {
            "NumMutant": 155,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) (#f (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote var) i...",
            "Result": "failed"
        },
        {
            "NumMutant": 156,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) (#f (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote var) ...",
            "Result": "failed"
        },
        {
            "NumMutant": 157,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) (#...",
            "Result": "failed"
        },
        {
            "NumMutant": 158,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "Result": "failed"
        },
        {
            "NumMutant": 159,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote var) i...",
            "Result": "failed"
        },
        {
            "NumMutant": 160,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) (#t (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote var) i...",
            "Result": "failed"
        },
        {
            "NumMutant": 161,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) (#t (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote var) ...",
            "Result": "failed"
        },
        {
            "NumMutant": 162,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) (#...",
            "Result": "failed"
        },
        {
            "NumMutant": 163,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-29",
            "MutantSourceRow": 210,
            "MutantSourceCol": 51,
            "MutantSource": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "MutantDestinationFile": "program3/shuffled-29",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (quote ->) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote if) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((equal? (quote =) id) (error (quote return-ids) \\\"ZNQR: invalid variable name\\\")) ((...",
            "Result": "passed"
        }
    ],
    "MutationScore": 0.853659,
    "TestFile": "program3/shuffled-29.rkt"
}