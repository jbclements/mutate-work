{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 44,
            "MutantSourceCol": 37,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for + operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (+ a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote ZNQR) \\\"Expected two reals for + operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (+ a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 44,
            "MutantSourceCol": 37,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for + operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (+ a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote ZNQR) \\\"Expected two reals for + operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (+ a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 44,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 44,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 44,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 44,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 48,
            "MutantSourceCol": 41,
            "MutantSource": "(+ a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . a)",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 48,
            "MutantSourceCol": 41,
            "MutantSource": "(+ a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . b)",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 51,
            "MutantSourceCol": 37,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for - operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (- a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote ZNQR) \\\"Expected two reals for - operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (- a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 51,
            "MutantSourceCol": 37,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for - operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (- a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote ZNQR) \\\"Expected two reals for - operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (- a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 51,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 51,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 51,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 51,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 55,
            "MutantSourceCol": 41,
            "MutantSource": "(- a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . a)",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 55,
            "MutantSourceCol": 41,
            "MutantSource": "(- a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . b)",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 58,
            "MutantSourceCol": 37,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for * operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (* a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote ZNQR) \\\"Expected two reals for * operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (* a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 58,
            "MutantSourceCol": 37,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for * operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (* a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote ZNQR) \\\"Expected two reals for * operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (* a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 58,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 58,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 58,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 58,
            "MutantSourceCol": 41,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 62,
            "MutantSourceCol": 41,
            "MutantSource": "(* a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . a)",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 62,
            "MutantSourceCol": 41,
            "MutantSource": "(* a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . b)",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 65,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 65,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) (#f (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 65,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (#f (/ a b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 65,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 65,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) (#t (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 65,
            "MutantSourceCol": 37,
            "MutantSource": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (else (/ a b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for / operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b))) ((= 0 b) (error (quote ZNQR) \\\"Divide by 0 exception.\\\")) (#t (/ a b)))",
            "Result": "passed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 66,
            "MutantSourceCol": 40,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 66,
            "MutantSourceCol": 40,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 66,
            "MutantSourceCol": 40,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 66,
            "MutantSourceCol": 40,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 70,
            "MutantSourceCol": 45,
            "MutantSource": "(/ a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . a)",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 70,
            "MutantSourceCol": 45,
            "MutantSource": "(/ a b)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . b)",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 73,
            "MutantSourceCol": 38,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for <= operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (<= a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote ZNQR) \\\"Expected two reals for <= operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (<= a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 73,
            "MutantSourceCol": 38,
            "MutantSource": "(if (or (not (real? a)) (not (real? b))) (error (quote ZNQR) \\\"Expected two reals for <= operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (<= a b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote ZNQR) \\\"Expected two reals for <= operator. Given\\\\t~e ~e\\\" (serialize a) (serialize b)) (<= a b))",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 73,
            "MutantSourceCol": 42,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 73,
            "MutantSourceCol": 42,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 73,
            "MutantSourceCol": 42,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (not (real? b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 73,
            "MutantSourceCol": 42,
            "MutantSource": "(or (not (real? a)) (not (real? b)))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (not (real? a)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\" (first ids)))) (else (a...",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) (#f (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\" (first ids)))) (els...",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) (#f =>) (else (appC (lamC ids (parse body)) (map parse (cast Exprs (Listof Sexp))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\" (first ids)))) (else (a...",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) (#t (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\" (first ids)))) (els...",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) (#t =>) (else (appC (lamC ids (parse body)) (map parse (cast Exprs (Listof Sexp))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 103,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"variable ids must be symbols.\\\")) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables.\\\")) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "Result": "passed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\" (fi...",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) (#f (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "Result": "failed"
        },
        {
            "NumMutant": 52,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) (#f =>) (else (lamC ids (parse body))))",
            "Result": "failed"
        },
        {
            "NumMutant": 53,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "Result": "failed"
        },
        {
            "NumMutant": 54,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\" (fi...",
            "Result": "failed"
        },
        {
            "NumMutant": 55,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) (#t (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keyword ~e as identifier.\\\"...",
            "Result": "failed"
        },
        {
            "NumMutant": 56,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) (#t =>) (else (lamC ids (parse body))))",
            "Result": "failed"
        },
        {
            "NumMutant": 57,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 110,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (andmap symbol? ids)) (error (quote ZNQR) \\\"Function parameters must be symbols.\\\\t~e\\\" s)) ((check-duplicates ids) (error (quote ZNQR) \\\"Duplicate variables ~e.\\\" ids)) ((check-keywords ids) => (lambda (id) (error (quote ZNQR) \\\"cannot use Keywor...",
            "Result": "passed"
        },
        {
            "NumMutant": 58,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "Result": "failed"
        },
        {
            "NumMutant": 59,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? ids) #f) (#f (first ids)) (else (check-keywords (rest ids))))",
            "Result": "failed"
        },
        {
            "NumMutant": 60,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (#f (check-keywords (rest ids))))",
            "Result": "failed"
        },
        {
            "NumMutant": 61,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "Result": "failed"
        },
        {
            "NumMutant": 62,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? ids) #f) (#t (first ids)) (else (check-keywords (rest ids))))",
            "Result": "failed"
        },
        {
            "NumMutant": 63,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 123,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (else (check-keywords (rest ids))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? ids) #f) ((hash-has-key? keywords (first ids)) (first ids)) (#t (check-keywords (rest ids))))",
            "Result": "passed"
        },
        {
            "NumMutant": 64,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 65,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) (#f (Binding-val (first env))) (else (lookup id (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 66,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (#f (lookup id (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 67,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 68,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) (#t (Binding-val (first env))) (else (lookup id (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 69,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (else (lookup id (rest env))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote ZNQR) \\\"id ~e not found.\\\" id)) ((equal? id (Binding-name (first env))) (Binding-val (first env))) (#t (lookup id (rest env))))",
            "Result": "passed"
        },
        {
            "NumMutant": 70,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 161,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= 2 (length args)) (func (first arg-vals) (second arg-vals))) (else (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (func (first arg-vals) (second arg-vals))) (else (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 71,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 161,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= 2 (length args)) (func (first arg-vals) (second arg-vals))) (else (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((= 2 (length args)) (func (first arg-vals) (second arg-vals))) (#f (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 72,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 161,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= 2 (length args)) (func (first arg-vals) (second arg-vals))) (else (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (func (first arg-vals) (second arg-vals))) (else (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 73,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 161,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= 2 (length args)) (func (first arg-vals) (second arg-vals))) (else (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((= 2 (length args)) (func (first arg-vals) (second arg-vals))) (#t (error (quote ZNQR) \\\"Arity mismatch.\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 74,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 166,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((not (= (length args) (length ids))) (error (quote ZNQR) \\\"Arity mismatch\\\")) (else (interp body (append (map Binding ids argVals) parentEnv))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote ZNQR) \\\"Arity mismatch\\\")) (else (interp body (append (map Binding ids argVals) parentEnv))))",
            "Result": "failed"
        },
        {
            "NumMutant": 75,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 166,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((not (= (length args) (length ids))) (error (quote ZNQR) \\\"Arity mismatch\\\")) (else (interp body (append (map Binding ids argVals) parentEnv))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (= (length args) (length ids))) (error (quote ZNQR) \\\"Arity mismatch\\\")) (#f (interp body (append (map Binding ids argVals) parentEnv))))",
            "Result": "failed"
        },
        {
            "NumMutant": 76,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 166,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((not (= (length args) (length ids))) (error (quote ZNQR) \\\"Arity mismatch\\\")) (else (interp body (append (map Binding ids argVals) parentEnv))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote ZNQR) \\\"Arity mismatch\\\")) (else (interp body (append (map Binding ids argVals) parentEnv))))",
            "Result": "failed"
        },
        {
            "NumMutant": 77,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 166,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((not (= (length args) (length ids))) (error (quote ZNQR) \\\"Arity mismatch\\\")) (else (interp body (append (map Binding ids argVals) parentEnv))))",
            "MutantDestinationFile": "program3/shuffled-23",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((not (= (length args) (length ids))) (error (quote ZNQR) \\\"Arity mismatch\\\")) (#t (interp body (append (map Binding ids argVals) parentEnv))))",
            "Result": "passed"
        },
        {
            "NumMutant": 78,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 179,
            "MutantSourceCol": 20,
            "MutantSource": "(if p \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 79,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-23",
            "MutantSourceRow": 179,
            "MutantSourceCol": 20,
            "MutantSource": "(if p \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        }
    ],
    "MutationScore": 0.9125,
    "TestFile": "program3/shuffled-23.rkt"
}