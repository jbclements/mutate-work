{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 34,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 34,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 36,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (Binding-val (first env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 36,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (lookup for (rest env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (~v v))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (if v \\\"true\\\" \\\"false\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"#<procedure>\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"#<primop>\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Invalid value.\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 50,
            "MutantSourceCol": 18,
            "MutantSource": "(if v \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": 50,
            "MutantDestinationCol": 24,
            "MutantDestination": "\\\"true\\\"",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 50,
            "MutantSourceCol": 18,
            "MutantSource": "(if v \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": 50,
            "MutantDestinationCol": 31,
            "MutantDestination": "\\\"false\\\"",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 19,
            "MutantSource": "(+ 3 (* 8 2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 3)",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 19,
            "MutantSource": "(+ 3 (* 8 2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin * 8 2)",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 24,
            "MutantSource": "(* 8 2)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 8)",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 24,
            "MutantSource": "(* 8 2)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 2)",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 19,
            "MutantSource": "(* (- 3 10) 5)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin - 3 10)",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 19,
            "MutantSource": "(* (- 3 10) 5)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 5)",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 22,
            "MutantSource": "(- 3 10)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 3)",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 22,
            "MutantSource": "(- 3 10)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 10)",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 87,
            "MutantSourceCol": 33,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 87,
            "MutantSourceCol": 33,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . y)",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 89,
            "MutantSourceCol": 36,
            "MutantSource": "(* some numbers)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . some)",
            "Result": "passed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 89,
            "MutantSourceCol": 36,
            "MutantSource": "(* some numbers)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . numbers)",
            "Result": "passed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 97,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (FundefC name sym (parse expression)))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 97,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Invalid function definition.\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params)))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\"))))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Attempted to reference an environment symbol which is not a closure.\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 125,
            "MutantSourceCol": 24,
            "MutantSource": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 125,
            "MutantSourceCol": 24,
            "MutantSource": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\"))",
            "Result": "failed"
        }
    ],
    "MutationScore": 0.933333,
    "TestFile": "program3/shuffled-12.rkt"
}