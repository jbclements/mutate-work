{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 34,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 34,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (#f (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 34,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 34,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (else (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error \\\"ZNQR: Attepmted to lookup an identifier not yet created.\\\")) (#t (cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "passed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 36,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 36,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (#f (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 36,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 36,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? (Binding-name (first env)) for) (Binding-val (first env))) (#t (lookup for (rest env))))",
            "Result": "passed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) (#f (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) (#f \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") (#f \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (#f (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) (#t (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) (#t \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") (#t \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 48,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (else (error \\\"ZNQR: Invalid value.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((number? v) (~v v)) ((boolean? v) (if v \\\"true\\\" \\\"false\\\")) ((Closure? v) \\\"#<procedure>\\\") ((Primop? v) \\\"#<primop>\\\") (#t (error \\\"ZNQR: Invalid value.\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 50,
            "MutantSourceCol": 18,
            "MutantSource": "(if v \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 50,
            "MutantSourceCol": 18,
            "MutantSource": "(if v \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 19,
            "MutantSource": "(+ 3 (* 8 2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 3)",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 19,
            "MutantSource": "(+ 3 (* 8 2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin * 8 2)",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 24,
            "MutantSource": "(* 8 2)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 8)",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 65,
            "MutantSourceCol": 24,
            "MutantSource": "(* 8 2)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 2)",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 19,
            "MutantSource": "(* (- 3 10) 5)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin - 3 10)",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 19,
            "MutantSource": "(* (- 3 10) 5)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 5)",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 22,
            "MutantSource": "(- 3 10)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 3)",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 66,
            "MutantSourceCol": 22,
            "MutantSource": "(- 3 10)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 10)",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 76,
            "MutantSourceCol": 11,
            "MutantSource": "(and (? symbol? funcname) funcname)",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f funcname)",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 76,
            "MutantSourceCol": 11,
            "MutantSource": "(and (? symbol? funcname) funcname)",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (? symbol? funcname) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 76,
            "MutantSourceCol": 11,
            "MutantSource": "(and (? symbol? funcname) funcname)",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t funcname)",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 76,
            "MutantSourceCol": 11,
            "MutantSource": "(and (? symbol? funcname) funcname)",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (? symbol? funcname) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 87,
            "MutantSourceCol": 33,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 87,
            "MutantSourceCol": 33,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . y)",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 89,
            "MutantSourceCol": 36,
            "MutantSource": "(* some numbers)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . some)",
            "Result": "passed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 89,
            "MutantSourceCol": 36,
            "MutantSource": "(* some numbers)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . numbers)",
            "Result": "passed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 97,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 97,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (#f (error \\\"ZNQR: Invalid function definition.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 97,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 97,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (else (error \\\"ZNQR: Invalid function definition.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (andmap symbol? sym) (symbol? name)) (FundefC name sym (parse expression))) (#t (error \\\"ZNQR: Invalid function definition.\\\")))",
            "Result": "passed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 98,
            "MutantSourceCol": 9,
            "MutantSource": "(and (andmap symbol? sym) (symbol? name))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (symbol? name))",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 98,
            "MutantSourceCol": 9,
            "MutantSource": "(and (andmap symbol? sym) (symbol? name))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (andmap symbol? sym) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 98,
            "MutantSourceCol": 9,
            "MutantSource": "(and (andmap symbol? sym) (symbol? name))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (symbol? name))",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 98,
            "MutantSourceCol": 9,
            "MutantSource": "(and (andmap symbol? sym) (symbol? name))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (andmap symbol? sym) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (...",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) (#f (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first ...",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (...",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) (#t (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first ...",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 121,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((Closure? fdef) (interp (Closure-body fdef) (map (lambda ((arg : Symbol) (par : ExprC)) (Binding arg (interp par env))) (Closure-args fdef) params))) ((Primop? fdef) (cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (Valu...",
            "Result": "passed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 125,
            "MutantSourceCol": 24,
            "MutantSource": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 125,
            "MutantSourceCol": 24,
            "MutantSource": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (#f (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 52,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 125,
            "MutantSourceCol": 24,
            "MutantSource": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 53,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-12",
            "MutantSourceRow": 125,
            "MutantSourceCol": 24,
            "MutantSource": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (else (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "MutantDestinationFile": "program3/shuffled-12",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((andmap ValueC? params) ((Primop-op fdef) (ValueC-v (first params)) (ValueC-v (first (rest params))))) (#t (error \\\"ZNQR: Attempted to evaluate an arithmetic operator on non-numbers.\\\")))",
            "Result": "passed"
        }
    ],
    "MutationScore": 0.851852,
    "TestFile": "program3/shuffled-12.rkt"
}