{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 56,
            "MutantSourceCol": 8,
            "MutantSource": "(cond (b (interp then env)) (else (interp else env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp then env))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 56,
            "MutantSourceCol": 8,
            "MutantSource": "(cond (b (interp then env)) (else (interp else env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 64,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((equal? (length app-args) 2) (op (interp (first app-args) env) (interp (second app-args) env))) (else (error (quote ZNQR) \\\"primitive operation takes two arguments\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (op (interp (first app-args) env) (interp (second app-args) env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 64,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((equal? (length app-args) 2) (op (interp (first app-args) env) (interp (second app-args) env))) (else (error (quote ZNQR) \\\"primitive operation takes two arguments\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"primitive operation takes two arguments\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 70,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((equal? (length app-args) (length clo-args)) (define argvals (map (lambda ((arg : ExprC)) (interp arg env)) app-args)) (define new-env (extend-env clo-env clo-args argvals)) (interp body new-env)) (else (error (quote ZNQR) \\\"arity mismatch\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (define argvals (map (lambda ((arg : ExprC)) (interp arg env)) app-args)) (define new-env (extend-env clo-env clo-args argvals)) (interp body new-env))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 70,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((equal? (length app-args) (length clo-args)) (define argvals (map (lambda ((arg : ExprC)) (interp arg env)) app-args)) (define new-env (extend-env clo-env clo-args argvals)) (interp body new-env)) (else (error (quote ZNQR) \\\"arity mismatch\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"arity mismatch\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 87,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((set-member? reserved x) (error (quote ZNQR) \\\"reserved identifier: ~s\\\" x)) (else (IdC x)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"reserved identifier: ~s\\\" x))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 87,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((set-member? reserved x) (error (quote ZNQR) \\\"reserved identifier: ~s\\\" x)) (else (IdC x)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (IdC x))",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 105,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates args) (error (quote ZNQR) \\\"duplicate identifiers in function header\\\")) ((any-reserved? args) (error (quote ZNQR) \\\"reserved identifier in function header\\\")) (else (LamC args (parse body))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"duplicate identifiers in function header\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 105,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates args) (error (quote ZNQR) \\\"duplicate identifiers in function header\\\")) ((any-reserved? args) (error (quote ZNQR) \\\"reserved identifier in function header\\\")) (else (LamC args (parse body))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"reserved identifier in function header\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 105,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates args) (error (quote ZNQR) \\\"duplicate identifiers in function header\\\")) ((any-reserved? args) (error (quote ZNQR) \\\"reserved identifier in function header\\\")) (else (LamC args (parse body))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (LamC args (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 126,
            "MutantSourceCol": 5,
            "MutantSource": "(cond (b \\\"true\\\") (else \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"true\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 126,
            "MutantSourceCol": 5,
            "MutantSource": "(cond (b \\\"true\\\") (else \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 137,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((hash-has-key? env id) (hash-ref env id)) (else (error (quote ZNQR) \\\"unbound identifier ~s\\\" id)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (hash-ref env id))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 137,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((hash-has-key? env id) (hash-ref env id)) (else (error (quote ZNQR) \\\"unbound identifier ~s\\\" id)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"unbound identifier ~s\\\" id))",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 192,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (+ (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (+ (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 192,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (+ (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"operand not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 194,
            "MutantSourceCol": 11,
            "MutantSource": "(+ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 194,
            "MutantSourceCol": 11,
            "MutantSource": "(+ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 201,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (- (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (- (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 201,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (- (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"operand not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 203,
            "MutantSourceCol": 11,
            "MutantSource": "(- (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 203,
            "MutantSourceCol": 11,
            "MutantSource": "(- (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 210,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (* (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (* (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 210,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (* (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"operand not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 212,
            "MutantSourceCol": 11,
            "MutantSource": "(* (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 212,
            "MutantSourceCol": 11,
            "MutantSource": "(* (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 219,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (cond ((equal? (NumV-n r) 0) (error (quote ZNQR) \\\"divide by zero\\\")) (else (NumV (/ (NumV-n l) (NumV-n r)))))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((equal? (NumV-n r) 0) (error (quote ZNQR) \\\"divide by zero\\\")) (else (NumV (/ (NumV-n l) (NumV-n r))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 219,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (cond ((equal? (NumV-n r) 0) (error (quote ZNQR) \\\"divide by zero\\\")) (else (NumV (/ (NumV-n l) (NumV-n r)))))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"operand not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 221,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((equal? (NumV-n r) 0) (error (quote ZNQR) \\\"divide by zero\\\")) (else (NumV (/ (NumV-n l) (NumV-n r)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"divide by zero\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 221,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((equal? (NumV-n r) 0) (error (quote ZNQR) \\\"divide by zero\\\")) (else (NumV (/ (NumV-n l) (NumV-n r)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (/ (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 224,
            "MutantSourceCol": 19,
            "MutantSource": "(/ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 224,
            "MutantSourceCol": 19,
            "MutantSource": "(/ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 231,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (BoolV (<= (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV (<= (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 231,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (BoolV (<= (NumV-n l) (NumV-n r)))) (else (error (quote ZNQR) \\\"operand not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"operand not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 267,
            "MutantSourceCol": 24,
            "MutantSource": "(* 2 x)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 2)",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 267,
            "MutantSourceCol": 24,
            "MutantSource": "(* 2 x)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 270,
            "MutantSourceCol": 33,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 270,
            "MutantSourceCol": 33,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . y)",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 273,
            "MutantSourceCol": 39,
            "MutantSource": "(* 2 x)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 2)",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-18",
            "MutantSourceRow": 273,
            "MutantSourceCol": 39,
            "MutantSource": "(* 2 x)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-18.rkt"
}