{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 64,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin l)",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 64,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 77,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin l)",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 77,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 90,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((check-duplicates params) (error \\\"ZNQR: Duplicate Parameters in var\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Duplicate Parameters in var\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 105,
            "MutantSourceCol": 13,
            "MutantSource": "(if (= (length args) 3) (IfC (parse (first args)) (parse (second args)) (parse (third args))) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 106,
            "MutantDestinationCol": 17,
            "MutantDestination": "(IfC (parse (first args)) (parse (second args)) (parse (third args)))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 105,
            "MutantSourceCol": 13,
            "MutantSource": "(if (= (length args) 3) (IfC (parse (first args)) (parse (second args)) (parse (third args))) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 107,
            "MutantDestinationCol": 17,
            "MutantDestination": "(error \\\"ZNQR: parse Bad Input\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 113,
            "MutantSourceCol": 20,
            "MutantSource": "(if (check-duplicates param_list) (error \\\"ZNQR: Duplicate Parameters\\\") (LamC param_list (parse body)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 114,
            "MutantDestinationCol": 24,
            "MutantDestination": "(error \\\"ZNQR: Duplicate Parameters\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 113,
            "MutantSourceCol": 20,
            "MutantSource": "(if (check-duplicates param_list) (error \\\"ZNQR: Duplicate Parameters\\\") (LamC param_list (parse body)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 115,
            "MutantDestinationCol": 24,
            "MutantDestination": "(LamC param_list (parse body))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 118,
            "MutantSourceCol": 28,
            "MutantSource": "(cond ((NumC? func_call) (error \\\"ZNQR: parse Bad Input\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 119,
            "MutantSourceCol": 28,
            "MutantSource": "(if (hash-has-key? top-level-hash func) (if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\")) (AppC func_call (map parse args)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 120,
            "MutantDestinationCol": 34,
            "MutantDestination": "(if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 119,
            "MutantSourceCol": 28,
            "MutantSource": "(if (hash-has-key? top-level-hash func) (if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\")) (AppC func_call (map parse args)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 123,
            "MutantDestinationCol": 34,
            "MutantDestination": "(AppC func_call (map parse args))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 120,
            "MutantSourceCol": 34,
            "MutantSource": "(if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 121,
            "MutantDestinationCol": 39,
            "MutantDestination": "(AppC func_call (map parse args))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 120,
            "MutantSourceCol": 34,
            "MutantSource": "(if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 122,
            "MutantDestinationCol": 39,
            "MutantDestination": "(error \\\"ZNQR: parse Bad Input\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 11,
            "MutantSource": "(if (not (or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))) (IdC sym) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 127,
            "MutantDestinationCol": 16,
            "MutantDestination": "(IdC sym)",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 11,
            "MutantSource": "(if (not (or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))) (IdC sym) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 128,
            "MutantDestinationCol": 16,
            "MutantDestination": "(error \\\"ZNQR: parse Bad Input\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 157,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((empty? syms) env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin env)",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 157,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((empty? syms) env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values)))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 165,
            "MutantSourceCol": 3,
            "MutantSource": "(if (not (= (length args) 2)) (error \\\"ZNQR Incorrect number of arguments\\\") (match op ((quote equal?) (BoolV (equal? (first args) (second args)))) (_ (match (first args) ((NumV n1) (match (second args) ((NumV n2) (cond ((and (eq? (quote /) op) (= 0 n2)) ...",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 166,
            "MutantDestinationCol": 7,
            "MutantDestination": "(error \\\"ZNQR Incorrect number of arguments\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 165,
            "MutantSourceCol": 3,
            "MutantSource": "(if (not (= (length args) 2)) (error \\\"ZNQR Incorrect number of arguments\\\") (match op ((quote equal?) (BoolV (equal? (first args) (second args)))) (_ (match (first args) ((NumV n1) (match (second args) ((NumV n2) (cond ((and (eq? (quote /) op) (= 0 n2)) ...",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 167,
            "MutantDestinationCol": 8,
            "MutantDestination": "(match op ((quote equal?) (BoolV (equal? (first args) (second args)))) (_ (match (first args) ((NumV n1) (match (second args) ((NumV n2) (cond ((and (eq? (quote /) op) (= 0 n2)) (error \\\"ZNQR: divide by zero\\\"))) (if (hash-has-key? binop_hash_map op) (Num...",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 172,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((and (eq? (quote /) op) (= 0 n2)) (error \\\"ZNQR: divide by zero\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: divide by zero\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(if (hash-has-key? binop_hash_map op) (NumV ((hash-ref binop_hash_map op) n1 n2)) (BoolV (<= n1 n2)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 175,
            "MutantDestinationCol": 45,
            "MutantDestination": "(NumV ((hash-ref binop_hash_map op) n1 n2))",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(if (hash-has-key? binop_hash_map op) (NumV ((hash-ref binop_hash_map op) n1 n2)) (BoolV (<= n1 n2)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 176,
            "MutantDestinationCol": 45,
            "MutantDestination": "(BoolV (<= n1 n2))",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 191,
            "MutantSourceCol": 6,
            "MutantSource": "(if (BoolV? (interp my_if env)) (if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env)) (error \\\"ZNQR If test did not evaluate to a boolean\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 192,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 191,
            "MutantSourceCol": 6,
            "MutantSource": "(if (BoolV? (interp my_if env)) (if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env)) (error \\\"ZNQR If test did not evaluate to a boolean\\\"))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 195,
            "MutantDestinationCol": 10,
            "MutantDestination": "(error \\\"ZNQR If test did not evaluate to a boolean\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 192,
            "MutantSourceCol": 10,
            "MutantSource": "(if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 193,
            "MutantDestinationCol": 15,
            "MutantDestination": "(interp my_then env)",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 192,
            "MutantSourceCol": 10,
            "MutantSource": "(if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": 194,
            "MutantDestinationCol": 15,
            "MutantDestination": "(interp my_else env)",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 199,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((LamC? func) (cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\"))))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 200,
            "MutantSourceCol": 12,
            "MutantSource": "(cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR Incorrect Number Of Arguments\\\"))",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-06.rkt"
}