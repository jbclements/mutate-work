{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 64,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 64,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) l) (#f (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 64,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 64,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) l) (#t (match (first l) ((list (? symbol? param) (quote =) arg) (cons (IdC param) (get_params (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 77,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 77,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) l) (#f (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 77,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 77,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((empty? l) l) (else (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) l) (#t (match (first l) ((list (? symbol? param) (quote =) arg) (cons (parse (cast arg Sexp)) (get_args (rest l)))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 90,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((check-duplicates params) (error \\\"ZNQR: Duplicate Parameters in var\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error \\\"ZNQR: Duplicate Parameters in var\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 90,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((check-duplicates params) (error \\\"ZNQR: Duplicate Parameters in var\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error \\\"ZNQR: Duplicate Parameters in var\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 105,
            "MutantSourceCol": 13,
            "MutantSource": "(if (= (length args) 3) (IfC (parse (first args)) (parse (second args)) (parse (third args))) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (IfC (parse (first args)) (parse (second args)) (parse (third args))) (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 105,
            "MutantSourceCol": 13,
            "MutantSource": "(if (= (length args) 3) (IfC (parse (first args)) (parse (second args)) (parse (third args))) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (IfC (parse (first args)) (parse (second args)) (parse (third args))) (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 113,
            "MutantSourceCol": 20,
            "MutantSource": "(if (check-duplicates param_list) (error \\\"ZNQR: Duplicate Parameters\\\") (LamC param_list (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error \\\"ZNQR: Duplicate Parameters\\\") (LamC param_list (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 113,
            "MutantSourceCol": 20,
            "MutantSource": "(if (check-duplicates param_list) (error \\\"ZNQR: Duplicate Parameters\\\") (LamC param_list (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error \\\"ZNQR: Duplicate Parameters\\\") (LamC param_list (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 118,
            "MutantSourceCol": 28,
            "MutantSource": "(cond ((NumC? func_call) (error \\\"ZNQR: parse Bad Input\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error \\\"ZNQR: parse Bad Input\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 118,
            "MutantSourceCol": 28,
            "MutantSource": "(cond ((NumC? func_call) (error \\\"ZNQR: parse Bad Input\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error \\\"ZNQR: parse Bad Input\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 119,
            "MutantSourceCol": 28,
            "MutantSource": "(if (hash-has-key? top-level-hash func) (if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\")) (AppC func_call (map parse args)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\")) (AppC func_call (map parse args)))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 119,
            "MutantSourceCol": 28,
            "MutantSource": "(if (hash-has-key? top-level-hash func) (if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\")) (AppC func_call (map parse args)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\")) (AppC func_call (map parse args)))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 120,
            "MutantSourceCol": 34,
            "MutantSource": "(if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 120,
            "MutantSourceCol": 34,
            "MutantSource": "(if (= (length args) 2) (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (AppC func_call (map parse args)) (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 11,
            "MutantSource": "(if (not (or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))) (IdC sym) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (IdC sym) (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 11,
            "MutantSource": "(if (not (or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))) (IdC sym) (error \\\"ZNQR: parse Bad Input\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (IdC sym) (error \\\"ZNQR: parse Bad Input\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (eq? sym (quasiquote if)) #f (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) #f (eq? sym (quasiquote ==)))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (eq? sym (quasiquote if)) #t (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) #t (eq? sym (quasiquote ==)))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 126,
            "MutantSourceCol": 20,
            "MutantSource": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) (eq? sym (quasiquote ==)))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (eq? sym (quasiquote if)) (eq? sym (quasiquote var)) (eq? sym (quasiquote ->)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 157,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((empty? syms) env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 157,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((empty? syms) env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? syms) env) (#f (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "Result": "failed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 157,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((empty? syms) env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 157,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((empty? syms) env) (else (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? syms) env) (#t (extend-env (hash-set env (first syms) (first values)) (rest syms) (rest values))))",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 165,
            "MutantSourceCol": 3,
            "MutantSource": "(if (not (= (length args) 2)) (error \\\"ZNQR Incorrect number of arguments\\\") (match op ((quote equal?) (BoolV (equal? (first args) (second args)))) (_ (match (first args) ((NumV n1) (match (second args) ((NumV n2) (cond ((and (eq? (quote /) op) (= 0 n2)) ...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error \\\"ZNQR Incorrect number of arguments\\\") (match op ((quote equal?) (BoolV (equal? (first args) (second args)))) (_ (match (first args) ((NumV n1) (match (second args) ((NumV n2) (cond ((and (eq? (quote /) op) (= 0 n2)) (error \\\"ZNQR: divide by...",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 165,
            "MutantSourceCol": 3,
            "MutantSource": "(if (not (= (length args) 2)) (error \\\"ZNQR Incorrect number of arguments\\\") (match op ((quote equal?) (BoolV (equal? (first args) (second args)))) (_ (match (first args) ((NumV n1) (match (second args) ((NumV n2) (cond ((and (eq? (quote /) op) (= 0 n2)) ...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error \\\"ZNQR Incorrect number of arguments\\\") (match op ((quote equal?) (BoolV (equal? (first args) (second args)))) (_ (match (first args) ((NumV n1) (match (second args) ((NumV n2) (cond ((and (eq? (quote /) op) (= 0 n2)) (error \\\"ZNQR: divide by...",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 172,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((and (eq? (quote /) op) (= 0 n2)) (error \\\"ZNQR: divide by zero\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error \\\"ZNQR: divide by zero\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 172,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((and (eq? (quote /) op) (= 0 n2)) (error \\\"ZNQR: divide by zero\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error \\\"ZNQR: divide by zero\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 172,
            "MutantSourceCol": 38,
            "MutantSource": "(and (eq? (quote /) op) (= 0 n2))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (= 0 n2))",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 172,
            "MutantSourceCol": 38,
            "MutantSource": "(and (eq? (quote /) op) (= 0 n2))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (eq? (quote /) op) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 172,
            "MutantSourceCol": 38,
            "MutantSource": "(and (eq? (quote /) op) (= 0 n2))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (= 0 n2))",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 172,
            "MutantSourceCol": 38,
            "MutantSource": "(and (eq? (quote /) op) (= 0 n2))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (eq? (quote /) op) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(if (hash-has-key? binop_hash_map op) (NumV ((hash-ref binop_hash_map op) n1 n2)) (BoolV (<= n1 n2)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (NumV ((hash-ref binop_hash_map op) n1 n2)) (BoolV (<= n1 n2)))",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 174,
            "MutantSourceCol": 31,
            "MutantSource": "(if (hash-has-key? binop_hash_map op) (NumV ((hash-ref binop_hash_map op) n1 n2)) (BoolV (<= n1 n2)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (NumV ((hash-ref binop_hash_map op) n1 n2)) (BoolV (<= n1 n2)))",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 191,
            "MutantSourceCol": 6,
            "MutantSource": "(if (BoolV? (interp my_if env)) (if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env)) (error \\\"ZNQR If test did not evaluate to a boolean\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env)) (error \\\"ZNQR If test did not evaluate to a boolean\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 191,
            "MutantSourceCol": 6,
            "MutantSource": "(if (BoolV? (interp my_if env)) (if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env)) (error \\\"ZNQR If test did not evaluate to a boolean\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env)) (error \\\"ZNQR If test did not evaluate to a boolean\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 192,
            "MutantSourceCol": 10,
            "MutantSource": "(if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (interp my_then env) (interp my_else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 192,
            "MutantSourceCol": 10,
            "MutantSource": "(if (equal? (BoolV true) (interp my_if env)) (interp my_then env) (interp my_else env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (interp my_then env) (interp my_else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 199,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((LamC? func) (cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))))",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 199,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((LamC? func) (cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))))",
            "Result": "failed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 200,
            "MutantSourceCol": 12,
            "MutantSource": "(cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error \\\"ZNQR Incorrect Number Of Arguments\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-06",
            "MutantSourceRow": 200,
            "MutantSourceCol": 12,
            "MutantSource": "(cond ((not (= (length (LamC-params func)) (length args))) (error \\\"ZNQR Incorrect Number Of Arguments\\\")))",
            "MutantDestinationFile": "program3/shuffled-06",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error \\\"ZNQR Incorrect Number Of Arguments\\\")))",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-06.rkt"
}