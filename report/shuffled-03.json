{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 53,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (+ x y)) (else (error \\\"ZNQR: invalid arguments to + \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (+ x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 53,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (+ x y)) (else (error \\\"ZNQR: invalid arguments to + \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: invalid arguments to + \\\" x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 54,
            "MutantSourceCol": 68,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 54,
            "MutantSourceCol": 68,
            "MutantSource": "(+ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . y)",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 57,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (- x y)) (else (error \\\"ZNQR: invalid arguments to - \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (- x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 57,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (- x y)) (else (error \\\"ZNQR: invalid arguments to - \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: invalid arguments to - \\\" x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 58,
            "MutantSourceCol": 68,
            "MutantSource": "(- x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 58,
            "MutantSourceCol": 68,
            "MutantSource": "(- x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . y)",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 61,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (* x y)) (else (error \\\"ZNQR: invalid arguments to * \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (* x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 61,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (* x y)) (else (error \\\"ZNQR: invalid arguments to * \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: invalid arguments to * \\\" x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 62,
            "MutantSourceCol": 68,
            "MutantSource": "(* x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 62,
            "MutantSourceCol": 68,
            "MutantSource": "(* x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . y)",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 65,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (match y (0 (error \\\"ZNQR: Divide by zero error\\\")) (_ (/ x y)))) (else (error \\\"ZNQR: invalid arguments to / \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (match y (0 (error \\\"ZNQR: Divide by zero error\\\")) (_ (/ x y))))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 65,
            "MutantSourceCol": 75,
            "MutantSource": "(cond ((and (real? x) (real? y)) (match y (0 (error \\\"ZNQR: Divide by zero error\\\")) (_ (/ x y)))) (else (error \\\"ZNQR: invalid arguments to / \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: invalid arguments to / \\\" x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 68,
            "MutantSourceCol": 73,
            "MutantSource": "(/ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . x)",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 68,
            "MutantSourceCol": 73,
            "MutantSource": "(/ x y)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . y)",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 71,
            "MutantSourceCol": 76,
            "MutantSource": "(cond ((and (real? x) (real? y)) (<= x y)) (else (error \\\"ZNQR: invalid arguments to <= \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (<= x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 71,
            "MutantSourceCol": 76,
            "MutantSource": "(cond ((and (real? x) (real? y)) (<= x y)) (else (error \\\"ZNQR: invalid arguments to <= \\\" x y)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: invalid arguments to <= \\\" x y))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 85,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: \\\" val \\\" not defined\\\")) ((equal? val (Binding-name (first env))) (Binding-val (first env))) (else (lookup val (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: \\\" val \\\" not defined\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 85,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: \\\" val \\\" not defined\\\")) ((equal? val (Binding-name (first env))) (Binding-val (first env))) (else (lookup val (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (Binding-val (first env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 85,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: \\\" val \\\" not defined\\\")) ((equal? val (Binding-name (first env))) (Binding-val (first env))) (else (lookup val (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (lookup val (rest env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 96,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? vals) (empty? names)) env) ((empty? names) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) ((empty? vals) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) (else (append (extend-env (rest vals) (rest names) env) (list (Binding (first n...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin env)",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 96,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? vals) (empty? names)) env) ((empty? names) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) ((empty? vals) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) (else (append (extend-env (rest vals) (rest names) env) (list (Binding (first n...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Parameter mismatch \\\" vals names))",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 96,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? vals) (empty? names)) env) ((empty? names) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) ((empty? vals) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) (else (append (extend-env (rest vals) (rest names) env) (list (Binding (first n...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Parameter mismatch \\\" vals names))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 96,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (empty? vals) (empty? names)) env) ((empty? names) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) ((empty? vals) (error \\\"ZNQR: Parameter mismatch \\\" vals names)) (else (append (extend-env (rest vals) (rest names) env) (list (Binding (first n...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (append (extend-env (rest vals) (rest names) env) (list (Binding (first names) (first vals)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 109,
            "MutantSourceCol": 40,
            "MutantSource": "(cond (val (interp t env)) (else (interp e env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp t env))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-03",
            "MutantSourceRow": 109,
            "MutantSourceCol": 40,
            "MutantSource": "(cond (val (interp t env)) (else (interp e env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp e env))",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-03.rkt"
}