{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 60,
            "MutantSourceCol": 27,
            "MutantSource": "(cond ((BoolV? testExpr) (cond ((equal? (BoolV #t) testExpr) (interp then env)) (else (interp else env)))) (else (error \\\"ZNQR: Interp - IfC's Value is not evaluating to a Boolean\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((equal? (BoolV #t) testExpr) (interp then env)) (else (interp else env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 60,
            "MutantSourceCol": 27,
            "MutantSource": "(cond ((BoolV? testExpr) (cond ((equal? (BoolV #t) testExpr) (interp then env)) (else (interp else env)))) (else (error \\\"ZNQR: Interp - IfC's Value is not evaluating to a Boolean\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Interp - IfC's Value is not evaluating to a Boolean\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 61,
            "MutantSourceCol": 48,
            "MutantSource": "(cond ((equal? (BoolV #t) testExpr) (interp then env)) (else (interp else env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp then env))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 61,
            "MutantSourceCol": 48,
            "MutantSource": "(cond ((equal? (BoolV #t) testExpr) (interp then env)) (else (interp else env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 68,
            "MutantSourceCol": 19,
            "MutantSource": "(cond ((empty? a) (error \\\"ZNQR: Interp - Not Enough Values for Operation\\\")) (else (prim-handler op (interp (first a) env) (cond ((empty? (rest (rest a))) (interp (first (rest a)) env)) (else (error \\\"ZNQR: More than 2 Values Given for a Binary Option\\\"))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Interp - Not Enough Values for Operation\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 68,
            "MutantSourceCol": 19,
            "MutantSource": "(cond ((empty? a) (error \\\"ZNQR: Interp - Not Enough Values for Operation\\\")) (else (prim-handler op (interp (first a) env) (cond ((empty? (rest (rest a))) (interp (first (rest a)) env)) (else (error \\\"ZNQR: More than 2 Values Given for a Binary Option\\\"))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (prim-handler op (interp (first a) env) (cond ((empty? (rest (rest a))) (interp (first (rest a)) env)) (else (error \\\"ZNQR: More than 2 Values Given for a Binary Option\\\")))))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 71,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((empty? (rest (rest a))) (interp (first (rest a)) env)) (else (error \\\"ZNQR: More than 2 Values Given for a Binary Option\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp (first (rest a)) env))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 71,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((empty? (rest (rest a))) (interp (first (rest a)) env)) (else (error \\\"ZNQR: More than 2 Values Given for a Binary Option\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: More than 2 Values Given for a Binary Option\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 97,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Get-Bind - Lookup - reference to undefined function\\\")) ((cons? env) (cond ((equal? n (Binding-name (first env))) (Binding-val (first env))) (else (lookup n (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Get-Bind - Lookup - reference to undefined function\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 97,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error \\\"ZNQR: Get-Bind - Lookup - reference to undefined function\\\")) ((cons? env) (cond ((equal? n (Binding-name (first env))) (Binding-val (first env))) (else (lookup n (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((equal? n (Binding-name (first env))) (Binding-val (first env))) (else (lookup n (rest env)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((equal? n (Binding-name (first env))) (Binding-val (first env))) (else (lookup n (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (Binding-val (first env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((equal? n (Binding-name (first env))) (Binding-val (first env))) (else (lookup n (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (lookup n (rest env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? funArg) env) (else (cast funArg (Listof Symbol)) (cast arg (Listof ExprC)) (full-extend (rest funArg) (extend-env env (Binding (first funArg) (interp (first arg) env))) (rest arg))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin env)",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? funArg) env) (else (cast funArg (Listof Symbol)) (cast arg (Listof ExprC)) (full-extend (rest funArg) (extend-env env (Binding (first funArg) (interp (first arg) env))) (rest arg))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cast funArg (Listof Symbol)) (cast arg (Listof ExprC)) (full-extend (rest funArg) (extend-env env (Binding (first funArg) (interp (first arg) env))) (rest arg)))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 125,
            "MutantSourceCol": 15,
            "MutantSource": "(cond ((equal? n #t) \\\"true\\\") (else \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"true\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 125,
            "MutantSourceCol": 15,
            "MutantSource": "(cond ((equal? n #t) \\\"true\\\") (else \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (cond ((and (equal? / func) (zero? (NumV-value r))) (error \\\"ZNQR: Cannot Divide by Zero\\\")) (else (NumV (func (NumV-value l) (NumV-value r)))))) (else (error \\\"ZNQR: BinOp - one argument was not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((and (equal? / func) (zero? (NumV-value r))) (error \\\"ZNQR: Cannot Divide by Zero\\\")) (else (NumV (func (NumV-value l) (NumV-value r))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 135,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (cond ((and (equal? / func) (zero? (NumV-value r))) (error \\\"ZNQR: Cannot Divide by Zero\\\")) (else (NumV (func (NumV-value l) (NumV-value r)))))) (else (error \\\"ZNQR: BinOp - one argument was not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: BinOp - one argument was not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 136,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((and (equal? / func) (zero? (NumV-value r))) (error \\\"ZNQR: Cannot Divide by Zero\\\")) (else (NumV (func (NumV-value l) (NumV-value r)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Cannot Divide by Zero\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 136,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((and (equal? / func) (zero? (NumV-value r))) (error \\\"ZNQR: Cannot Divide by Zero\\\")) (else (NumV (func (NumV-value l) (NumV-value r)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (func (NumV-value l) (NumV-value r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 144,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (BoolV (func (NumV-value l) (NumV-value r)))) (else (error \\\"ZNQR: Compare - one argument was not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV (func (NumV-value l) (NumV-value r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 144,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (BoolV (func (NumV-value l) (NumV-value r)))) (else (error \\\"ZNQR: Compare - one argument was not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Compare - one argument was not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 151,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((or (PrimV? l) (PrimV? r) (ClosV? l) (ClosV? r)) (BoolV #f)) (else (BoolV (equal? l r))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV #f))",
            "Result": "passed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 151,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((or (PrimV? l) (PrimV? r) (ClosV? l) (ClosV? r)) (BoolV #f)) (else (BoolV (equal? l r))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV (equal? l r)))",
            "Result": "passed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 158,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? list) #t) ((equal? 0 (check-additional-amount (rest list) (first list) 0)) (appears-once (rest list))) (else #f))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 158,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? list) #t) ((equal? 0 (check-additional-amount (rest list) (first list) 0)) (appears-once (rest list))) (else #f))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (appears-once (rest list)))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 158,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? list) #t) ((equal? 0 (check-additional-amount (rest list) (first list) 0)) (appears-once (rest list))) (else #f))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 166,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? list) count) ((equal? (first list) key) (check-additional-amount (rest list) key (+ 1 count))) (else (check-additional-amount (rest list) key count)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin count)",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 166,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? list) count) ((equal? (first list) key) (check-additional-amount (rest list) key (+ 1 count))) (else (check-additional-amount (rest list) key count)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (check-additional-amount (rest list) key (+ 1 count)))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 166,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? list) count) ((equal? (first list) key) (check-additional-amount (rest list) key (+ 1 count))) (else (check-additional-amount (rest list) key count)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (check-additional-amount (rest list) key count))",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 168,
            "MutantSourceCol": 72,
            "MutantSource": "(+ 1 count)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . 1)",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 168,
            "MutantSourceCol": 72,
            "MutantSource": "(+ 1 count)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . count)",
            "Result": "failed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 174,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (member a (quote (+ / - * if)))) #f) (else #t))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 174,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (member a (quote (+ / - * if)))) #f) (else #t))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 175,
            "MutantSourceCol": 21,
            "MutantSource": "(+ / - * if)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . /)",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 175,
            "MutantSourceCol": 21,
            "MutantSource": "(+ / - * if)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . -)",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 175,
            "MutantSourceCol": 21,
            "MutantSource": "(+ / - * if)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . *)",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 175,
            "MutantSourceCol": 21,
            "MutantSource": "(+ / - * if)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . if)",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 181,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (member a (quote (var if -> =)))) #t) (else #f))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-27",
            "MutantSourceRow": 181,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (member a (quote (var if -> =)))) #t) (else #f))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin #f)",
            "Result": "failed"
        }
    ],
    "MutationScore": 0.95,
    "TestFile": "program3/shuffled-27.rkt"
}