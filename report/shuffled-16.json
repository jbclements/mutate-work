{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 56,
            "MutantSourceCol": 13,
            "MutantSource": "(cond ((hash-has-key? env i) (hash-ref env i)) (else (error (quote interp) \\\"ZNQR: Id not found in environment ~e\\\" i)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (hash-ref env i))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 56,
            "MutantSourceCol": 13,
            "MutantSource": "(cond ((hash-has-key? env i) (hash-ref env i)) (else (error (quote interp) \\\"ZNQR: Id not found in environment ~e\\\" i)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote interp) \\\"ZNQR: Id not found in environment ~e\\\" i))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 74,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((= (length p) (length args)) (local ((define new-env (extend-env clo-env p args))) (interp b new-env))) (else (error (quote interp) \\\"ZNQR: wrong number of arguments\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (local ((define new-env (extend-env clo-env p args))) (interp b new-env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 74,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((= (length p) (length args)) (local ((define new-env (extend-env clo-env p args))) (interp b new-env))) (else (error (quote interp) \\\"ZNQR: wrong number of arguments\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote interp) \\\"ZNQR: wrong number of arguments\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 89,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((reserved? s) (error (quote parse) \\\"ZNQR: invalid id input ~e\\\" s)) (else (IdC s)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse) \\\"ZNQR: invalid id input ~e\\\" s))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 89,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((reserved? s) (error (quote parse) \\\"ZNQR: invalid id input ~e\\\" s)) (else (IdC s)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (IdC s))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 93,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (= (length a) 3)) (error (quote parse) \\\"ZNQR: wrong arity if ~e\\\" s)) (else (AppC (IdC (quote if)) (list (parse (first a)) (parse (second a)) (parse (third a))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse) \\\"ZNQR: wrong arity if ~e\\\" s))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 93,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (= (length a) 3)) (error (quote parse) \\\"ZNQR: wrong arity if ~e\\\" s)) (else (AppC (IdC (quote if)) (list (parse (first a)) (parse (second a)) (parse (third a))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (AppC (IdC (quote if)) (list (parse (first a)) (parse (second a)) (parse (third a)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 102,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((or (contains-reserved? args) (contains-duplicate? args)) (error (quote parse) \\\"ZNQR: Given a reserved sym or duplicates ~e\\\" args)) (else (AppC (LamC args (parse b)) vals)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse) \\\"ZNQR: Given a reserved sym or duplicates ~e\\\" args))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 102,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((or (contains-reserved? args) (contains-duplicate? args)) (error (quote parse) \\\"ZNQR: Given a reserved sym or duplicates ~e\\\" args)) (else (AppC (LamC args (parse b)) vals)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (AppC (LamC args (parse b)) vals))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 108,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((or (contains-reserved? args) (contains-duplicate? args)) (error (quote parse) \\\"ZNQR: Given a reserved sym or duplicates ~e\\\" args)) (else (LamC args (parse b))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse) \\\"ZNQR: Given a reserved sym or duplicates ~e\\\" args))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 108,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((or (contains-reserved? args) (contains-duplicate? args)) (error (quote parse) \\\"ZNQR: Given a reserved sym or duplicates ~e\\\" args)) (else (LamC args (parse b))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (LamC args (parse b)))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 115,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (= (length a) 2)) (error (quote parse) \\\"ZNQR: wrong arity binop ~e\\\" s)) (else (AppC (IdC op) (list (parse (first a)) (parse (second a))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse) \\\"ZNQR: wrong arity binop ~e\\\" s))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 115,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (= (length a) 2)) (error (quote parse) \\\"ZNQR: wrong arity binop ~e\\\" s)) (else (AppC (IdC op) (list (parse (first a)) (parse (second a))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (AppC (IdC op) (list (parse (first a)) (parse (second a)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 128,
            "MutantSourceCol": 15,
            "MutantSource": "(if b \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "program3/shuffled-16",
            "MutantDestinationRow": 128,
            "MutantDestinationCol": 21,
            "MutantDestination": "\\\"true\\\"",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 128,
            "MutantSourceCol": 15,
            "MutantSource": "(if b \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "program3/shuffled-16",
            "MutantDestinationRow": 128,
            "MutantDestinationCol": 28,
            "MutantDestination": "\\\"false\\\"",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 159,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? syms) false) (else (or (contains? (first syms) (rest syms)) (contains-duplicate? (rest syms)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin false)",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 159,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? syms) false) (else (or (contains? (first syms) (rest syms)) (contains-duplicate? (rest syms)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (or (contains? (first syms) (rest syms)) (contains-duplicate? (rest syms))))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 179,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) e) (else (local ((define new-env (hash-set e (first s) (first v)))) (extend-env new-env (rest s) (rest v)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin e)",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 179,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) e) (else (local ((define new-env (hash-set e (first s) (first v)))) (extend-env new-env (rest s) (rest v)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (local ((define new-env (hash-set e (first s) (first v)))) (extend-env new-env (rest s) (rest v))))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 190,
            "MutantSourceCol": 44,
            "MutantSource": "(+ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 190,
            "MutantSourceCol": 44,
            "MutantSource": "(+ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 198,
            "MutantSourceCol": 44,
            "MutantSource": "(- (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 198,
            "MutantSourceCol": 44,
            "MutantSource": "(- (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 206,
            "MutantSourceCol": 44,
            "MutantSource": "(* (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 206,
            "MutantSourceCol": 44,
            "MutantSource": "(* (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 215,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((equal? (NumV-n b) 0) (error (quote div) \\\"ZNQR: Cannot divide by zero\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote div) \\\"ZNQR: Cannot divide by zero\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 215,
            "MutantSourceCol": 7,
            "MutantSource": "(cond ((equal? (NumV-n b) 0) (error (quote div) \\\"ZNQR: Cannot divide by zero\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (/ (NumV-n a) (NumV-n b))))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 216,
            "MutantSourceCol": 22,
            "MutantSource": "(/ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-16",
            "MutantSourceRow": 216,
            "MutantSourceCol": 22,
            "MutantSource": "(/ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-16.rkt"
}