{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 60,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (+ (NumV-n l) (NumV-n r)))) (else (error (quote num+) \\\"ZNQR: One or more arguments to add not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (+ (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 60,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (+ (NumV-n l) (NumV-n r)))) (else (error (quote num+) \\\"ZNQR: One or more arguments to add not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote num+) \\\"ZNQR: One or more arguments to add not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 61,
            "MutantSourceCol": 37,
            "MutantSource": "(+ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 61,
            "MutantSourceCol": 37,
            "MutantSource": "(+ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 66,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (- (NumV-n l) (NumV-n r)))) (else (error (quote num+) \\\"ZNQR: One or more arguments to subtract not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (- (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 66,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (- (NumV-n l) (NumV-n r)))) (else (error (quote num+) \\\"ZNQR: One or more arguments to subtract not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote num+) \\\"ZNQR: One or more arguments to subtract not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 67,
            "MutantSourceCol": 37,
            "MutantSource": "(- (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 67,
            "MutantSourceCol": 37,
            "MutantSource": "(- (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 72,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (* (NumV-n l) (NumV-n r)))) (else (error (quote num*) \\\"ZNQR: One or more arguments to multiply not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (* (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 72,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (NumV (* (NumV-n l) (NumV-n r)))) (else (error (quote num*) \\\"ZNQR: One or more arguments to multiply not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote num*) \\\"ZNQR: One or more arguments to multiply not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 73,
            "MutantSourceCol": 37,
            "MutantSource": "(* (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 73,
            "MutantSourceCol": 37,
            "MutantSource": "(* (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 79,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (cond ((not (eq? (NumV-n r) 0)) (NumV (/ (NumV-n l) (NumV-n r)))) (else (error (quote num/) \\\"ZNQR: Division by zero\\\")))) (else (error (quote num/) \\\"ZNQR: One or more arguments to divide not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((not (eq? (NumV-n r) 0)) (NumV (/ (NumV-n l) (NumV-n r)))) (else (error (quote num/) \\\"ZNQR: Division by zero\\\"))))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 79,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (NumV? l) (NumV? r)) (cond ((not (eq? (NumV-n r) 0)) (NumV (/ (NumV-n l) (NumV-n r)))) (else (error (quote num/) \\\"ZNQR: Division by zero\\\")))) (else (error (quote num/) \\\"ZNQR: One or more arguments to divide not a number\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote num/) \\\"ZNQR: One or more arguments to divide not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 81,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (eq? (NumV-n r) 0)) (NumV (/ (NumV-n l) (NumV-n r)))) (else (error (quote num/) \\\"ZNQR: Division by zero\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (NumV (/ (NumV-n l) (NumV-n r))))",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 81,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (eq? (NumV-n r) 0)) (NumV (/ (NumV-n l) (NumV-n r)))) (else (error (quote num/) \\\"ZNQR: Division by zero\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote num/) \\\"ZNQR: Division by zero\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 82,
            "MutantSourceCol": 39,
            "MutantSource": "(/ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n l)",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 82,
            "MutantSourceCol": 39,
            "MutantSource": "(/ (NumV-n l) (NumV-n r))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n r)",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 89,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (and (NumV? l) (NumV? r))) (error (quote num<=) \\\"ZNQR: One or more arguments to compare not a number\\\")) ((<= (NumV-n l) (NumV-n r)) (BoolV #t)) (else (BoolV #f)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote num<=) \\\"ZNQR: One or more arguments to compare not a number\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 89,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (and (NumV? l) (NumV? r))) (error (quote num<=) \\\"ZNQR: One or more arguments to compare not a number\\\")) ((<= (NumV-n l) (NumV-n r)) (BoolV #t)) (else (BoolV #f)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV #t))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 89,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (and (NumV? l) (NumV? r))) (error (quote num<=) \\\"ZNQR: One or more arguments to compare not a number\\\")) ((<= (NumV-n l) (NumV-n r)) (BoolV #t)) (else (BoolV #f)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV #f))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 98,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((or (or (ClosV? l) (PrimOpV? l)) (or (ClosV? r) (PrimOpV? r))) (BoolV false)) (else (match l ((NumV n) (cond ((and (NumV? r) (eq? (NumV-n r) n)) (BoolV true)) (else (BoolV false)))) ((BoolV b) (cond ((and (BoolV? r) (eq? (BoolV-b r) b)) (BoolV tr...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV false))",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 98,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((or (or (ClosV? l) (PrimOpV? l)) (or (ClosV? r) (PrimOpV? r))) (BoolV false)) (else (match l ((NumV n) (cond ((and (NumV? r) (eq? (NumV-n r) n)) (BoolV true)) (else (BoolV false)))) ((BoolV b) (cond ((and (BoolV? r) (eq? (BoolV-b r) b)) (BoolV tr...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (match l ((NumV n) (cond ((and (NumV? r) (eq? (NumV-n r) n)) (BoolV true)) (else (BoolV false)))) ((BoolV b) (cond ((and (BoolV? r) (eq? (BoolV-b r) b)) (BoolV true)) (else (BoolV false)))) ((StrV s) (cond ((and (StrV? r) (eq? (StrV-s r) s)) (Boo...",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 102,
            "MutantSourceCol": 17,
            "MutantSource": "(cond ((and (NumV? r) (eq? (NumV-n r) n)) (BoolV true)) (else (BoolV false)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV true))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 102,
            "MutantSourceCol": 17,
            "MutantSource": "(cond ((and (NumV? r) (eq? (NumV-n r) n)) (BoolV true)) (else (BoolV false)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV false))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 105,
            "MutantSourceCol": 18,
            "MutantSource": "(cond ((and (BoolV? r) (eq? (BoolV-b r) b)) (BoolV true)) (else (BoolV false)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV true))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 105,
            "MutantSourceCol": 18,
            "MutantSource": "(cond ((and (BoolV? r) (eq? (BoolV-b r) b)) (BoolV true)) (else (BoolV false)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV false))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 108,
            "MutantSourceCol": 17,
            "MutantSource": "(cond ((and (StrV? r) (eq? (StrV-s r) s)) (BoolV true)) (else (BoolV false)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV true))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 108,
            "MutantSourceCol": 17,
            "MutantSource": "(cond ((and (StrV? r) (eq? (StrV-s r) s)) (BoolV true)) (else (BoolV false)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (BoolV false))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 147,
            "MutantSourceCol": 34,
            "MutantSource": "(cond (value (interp t env)) (else (interp e env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp t env))",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 147,
            "MutantSourceCol": 34,
            "MutantSource": "(cond (value (interp t env)) (else (interp e env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp e env))",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 177,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((not (eq? (length (rest s)) (length arg))) (error (quote parse) \\\"ZNQR: Not enough arguments provided\\\")) (else (AppC f (map parse exp2))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse) \\\"ZNQR: Not enough arguments provided\\\"))",
            "Result": "passed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 177,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((not (eq? (length (rest s)) (length arg))) (error (quote parse) \\\"ZNQR: Not enough arguments provided\\\")) (else (AppC f (map parse exp2))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (AppC f (map parse exp2)))",
            "Result": "passed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 183,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((checkReservedKeysSym s) (error (quote parse:) \\\"ZNQR: Illegal symbol used\\\")) ((IdC s)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse:) \\\"ZNQR: Illegal symbol used\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 183,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((checkReservedKeysSym s) (error (quote parse:) \\\"ZNQR: Illegal symbol used\\\")) ((IdC s)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin)",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 190,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (or (check-duplicates (LamC-args l)) (checkReservedKeysList (LamC-args l)))) l) (else (error \\\"ZNQR: Invalid lambda usage\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin l)",
            "Result": "passed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 190,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((not (or (check-duplicates (LamC-args l)) (checkReservedKeysList (LamC-args l)))) l) (else (error \\\"ZNQR: Invalid lambda usage\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Invalid lambda usage\\\"))",
            "Result": "passed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 205,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((checkReservedKeysSym id) (error (quote parse) \\\"ZNQR: Reserved names can not be used as ids\\\")) ((AppC (LamC (cast id (Listof Symbol)) (parse e)) (map parse (cast val (Listof Sexp))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote parse) \\\"ZNQR: Reserved names can not be used as ids\\\"))",
            "Result": "passed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 205,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((checkReservedKeysSym id) (error (quote parse) \\\"ZNQR: Reserved names can not be used as ids\\\")) ((AppC (LamC (cast id (Listof Symbol)) (parse e)) (map parse (cast val (Listof Sexp))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin)",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 217,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: Symbol not found\\\")) (else (cond ((symbol=? sym (Binding-name (first env))) (Binding-val (first env))) (else (lookup sym (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote lookup) \\\"ZNQR: Symbol not found\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 217,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: Symbol not found\\\")) (else (cond ((symbol=? sym (Binding-name (first env))) (Binding-val (first env))) (else (lookup sym (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((symbol=? sym (Binding-name (first env))) (Binding-val (first env))) (else (lookup sym (rest env)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 219,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? sym (Binding-name (first env))) (Binding-val (first env))) (else (lookup sym (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (Binding-val (first env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 219,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? sym (Binding-name (first env))) (Binding-val (first env))) (else (lookup sym (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (lookup sym (rest env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 233,
            "MutantSourceCol": 15,
            "MutantSource": "(cond (b \\\"true\\\") (else \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"true\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 233,
            "MutantSourceCol": 15,
            "MutantSource": "(cond (b \\\"true\\\") (else \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 248,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (eq? (length names) (length vals))) (error (quote binder) \\\"ZNQR: Binding error on arguments\\\")) ((empty? names) env) (else (append (list (Binding (first names) (first vals))) (binder (rest names) (rest vals) env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote binder) \\\"ZNQR: Binding error on arguments\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 248,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (eq? (length names) (length vals))) (error (quote binder) \\\"ZNQR: Binding error on arguments\\\")) ((empty? names) env) (else (append (list (Binding (first names) (first vals))) (binder (rest names) (rest vals) env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin env)",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 248,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((not (eq? (length names) (length vals))) (error (quote binder) \\\"ZNQR: Binding error on arguments\\\")) ((empty? names) env) (else (append (list (Binding (first names) (first vals))) (binder (rest names) (rest vals) env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (append (list (Binding (first names) (first vals))) (binder (rest names) (rest vals) env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 254,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((symbol? s) s) (else (error \\\"ZNQR: Expected a symbol\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin s)",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 254,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((symbol? s) s) (else (error \\\"ZNQR: Expected a symbol\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error \\\"ZNQR: Expected a symbol\\\"))",
            "Result": "passed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 262,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) false) (else (cond ((hash-has-key? reservedKeys (first l)) true) (else (checkReservedKeysList (rest l))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin false)",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 262,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) false) (else (cond ((hash-has-key? reservedKeys (first l)) true) (else (checkReservedKeysList (rest l))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((hash-has-key? reservedKeys (first l)) true) (else (checkReservedKeysList (rest l)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 52,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 265,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((hash-has-key? reservedKeys (first l)) true) (else (checkReservedKeysList (rest l))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin true)",
            "Result": "passed"
        },
        {
            "NumMutant": 53,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-25",
            "MutantSourceRow": 265,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((hash-has-key? reservedKeys (first l)) true) (else (checkReservedKeysList (rest l))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (checkReservedKeysList (rest l)))",
            "Result": "failed"
        }
    ],
    "MutationScore": 0.87037,
    "TestFile": "program3/shuffled-25.rkt"
}