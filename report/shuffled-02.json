{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 65,
            "MutantSourceCol": 25,
            "MutantSource": "(if (zero? d) (error (quote ZNQR) \\\"Division by zero\\\") (NumV (/ n d)))",
            "MutantDestinationFile": "program3/shuffled-02",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 39,
            "MutantDestination": "(error (quote ZNQR) \\\"Division by zero\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 65,
            "MutantSourceCol": 25,
            "MutantSource": "(if (zero? d) (error (quote ZNQR) \\\"Division by zero\\\") (NumV (/ n d)))",
            "MutantDestinationFile": "program3/shuffled-02",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 72,
            "MutantDestination": "(NumV (/ n d))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 65,
            "MutantSourceCol": 78,
            "MutantSource": "(/ n d)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . n)",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 65,
            "MutantSourceCol": 78,
            "MutantSource": "(/ n d)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . d)",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 96,
            "MutantSourceCol": 15,
            "MutantSource": "(if b \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "program3/shuffled-02",
            "MutantDestinationRow": 96,
            "MutantDestinationCol": 21,
            "MutantDestination": "\\\"true\\\"",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 96,
            "MutantSourceCol": 15,
            "MutantSource": "(if b \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "program3/shuffled-02",
            "MutantDestinationRow": 96,
            "MutantDestinationCol": 28,
            "MutantDestination": "\\\"false\\\"",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 123,
            "MutantSourceCol": 21,
            "MutantSource": "(if bool (interp then env) (interp else env))",
            "MutantDestinationFile": "program3/shuffled-02",
            "MutantDestinationRow": 123,
            "MutantDestinationCol": 30,
            "MutantDestination": "(interp then env)",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 123,
            "MutantSourceCol": 21,
            "MutantSource": "(if bool (interp then env) (interp else env))",
            "MutantDestinationFile": "program3/shuffled-02",
            "MutantDestinationRow": 123,
            "MutantDestinationCol": 48,
            "MutantDestination": "(interp else env)",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 134,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((equal? (length args) (length params)) (define new-bindings (map Binding params evaluated-args)) (interp body (append new-bindings clos-env))) (else (error (quasiquote ZNQR) \\\"Expected ~e arguments but received ~e\\\" (length params) (length args))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (define new-bindings (map Binding params evaluated-args)) (interp body (append new-bindings clos-env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 134,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((equal? (length args) (length params)) (define new-bindings (map Binding params evaluated-args)) (interp body (append new-bindings clos-env))) (else (error (quasiquote ZNQR) \\\"Expected ~e arguments but received ~e\\\" (length params) (length args))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quasiquote ZNQR) \\\"Expected ~e arguments but received ~e\\\" (length params) (length args)))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 161,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates var-syms) (error (quasiquote ZNQR) \\\"var binds identifier to multiple values\\\")) ((findf reserved var-syms) (error (quasiquote ZNQR) \\\"var uses reserved identifier\\\")) (else (define var-asgns (map parse (cast exprs (Listof Sexp)))) ...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quasiquote ZNQR) \\\"var binds identifier to multiple values\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 161,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates var-syms) (error (quasiquote ZNQR) \\\"var binds identifier to multiple values\\\")) ((findf reserved var-syms) (error (quasiquote ZNQR) \\\"var uses reserved identifier\\\")) (else (define var-asgns (map parse (cast exprs (Listof Sexp)))) ...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quasiquote ZNQR) \\\"var uses reserved identifier\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 161,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates var-syms) (error (quasiquote ZNQR) \\\"var binds identifier to multiple values\\\")) ((findf reserved var-syms) (error (quasiquote ZNQR) \\\"var uses reserved identifier\\\")) (else (define var-asgns (map parse (cast exprs (Listof Sexp)))) ...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (define var-asgns (map parse (cast exprs (Listof Sexp)))) (AppC (FunC var-syms (parse body)) var-asgns))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 167,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates param-syms) (error (quasiquote ZNQR) \\\"Function has parameters with same identifiers\\\")) (else (FunC param-syms (parse body))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quasiquote ZNQR) \\\"Function has parameters with same identifiers\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-02",
            "MutantSourceRow": 167,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-duplicates param-syms) (error (quasiquote ZNQR) \\\"Function has parameters with same identifiers\\\")) (else (FunC param-syms (parse body))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (FunC param-syms (parse body)))",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-02.rkt"
}