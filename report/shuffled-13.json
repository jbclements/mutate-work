{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 63,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= (length args) (length a)) (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (else (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (else (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 63,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= (length args) (length a)) (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (else (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((= (length args) (length a)) (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (#f (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 63,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= (length args) (length a)) (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (else (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (else (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 63,
            "MutantSourceCol": 8,
            "MutantSource": "(cond ((= (length args) (length a)) (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (else (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((= (length args) (length a)) (interp body (append (map (lambda ((arg : Symbol) (argval : ExprC)) (Binding arg (interp argval env))) args a) clos-env))) (#t (error (quote interp) \\\"ZNQR: not valid argument list length\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 94,
            "MutantSourceCol": 20,
            "MutantSource": "(cond ((is-id? id) (IdC id)) (else (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (IdC id)) (else (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 94,
            "MutantSourceCol": 20,
            "MutantSource": "(cond ((is-id? id) (IdC id)) (else (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((is-id? id) (IdC id)) (#f (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 94,
            "MutantSourceCol": 20,
            "MutantSource": "(cond ((is-id? id) (IdC id)) (else (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (IdC id)) (else (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 94,
            "MutantSourceCol": 20,
            "MutantSource": "(cond ((is-id? id) (IdC id)) (else (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((is-id? id) (IdC id)) (#t (error (quote parse) \\\"ZNQR: Parse error\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 99,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse ...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse expr)) (map parse (cast id-expr (Listof Se...",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 99,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse ...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) (#f (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse expr)) (map parse (cast id-expr (Listof Sexp)...",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 99,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse ...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (#f (AppC (LamC (cast id (Listof Symbol)) (parse ex...",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 99,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse ...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse expr)) (map parse (cast id-expr (Listof Se...",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 99,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse ...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) (#t (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse expr)) (map parse (cast id-expr (Listof Sexp)...",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 99,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (AppC (LamC (cast id (Listof Symbol)) (parse ...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params (cast id (Listof Symbol))) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? (cast id (Listof Symbol)))) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (#t (AppC (LamC (cast id (Listof Symbol)) (parse ex...",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 104,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 104,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) (#f (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 104,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (#f (LamC ids (parse expr))))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 104,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 104,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) (#t (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 104,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (else (LamC ids (parse expr))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((check-dup-params ids) (error (quote parse) \\\"ZNQR: Duplicate names error\\\")) ((not (andmap is-id? ids)) (error (quote parse) \\\"ZNQR: Invalid ID error\\\")) (#t (LamC ids (parse expr))))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (symbol=? s (quote var)) #f (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) #f (symbol=? s (quote =)))",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (symbol=? s (quote var)) #t (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) #t (symbol=? s (quote =)))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 115,
            "MutantSourceCol": 7,
            "MutantSource": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) (symbol=? s (quote =)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (symbol=? s (quote var)) (symbol=? s (quote if)) (symbol=? s (quote ->)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 121,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((BoolV? test-val) (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (else (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (else (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 121,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((BoolV? test-val) (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (else (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((BoolV? test-val) (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (#f (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 121,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((BoolV? test-val) (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (else (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (else (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 121,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((BoolV? test-val) (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (else (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((BoolV? test-val) (cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))) (#t (error (quote if-then-else-helper) \\\"ZNQR: Test value is not a boolean.\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 123,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (interp then env)) (else (interp else-result env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 123,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((BoolV-bool test-val) (interp then env)) (#f (interp else-result env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 123,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (interp then env)) (else (interp else-result env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 123,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((BoolV-bool test-val) (interp then env)) (else (interp else-result env)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((BoolV-bool test-val) (interp then env)) (#t (interp else-result env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-n b)))) ((symbol=? op...",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) (#f (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-n b)))) ((symbol=? op...",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) (#f (NumV (+ (NumV-n a) (NumV-n b)))) ((symbol=? op...",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-n b)))) ((symbol=? op...",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) (#t (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-n b)))) ((symbol=? op...",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) (#t (NumV (+ (NumV-n a) (NumV-n b)))) ((symbol=? op...",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 132,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? op (quote /)) (cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))) ((symbol=? op (quote *)) (NumV (* (NumV-n a) (NumV-n b)))) ((symbol=? op (quote +)) (NumV (+ (NumV-n a) (NumV-...",
            "Result": "failed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 133,
            "MutantSourceCol": 25,
            "MutantSource": "(cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 133,
            "MutantSourceCol": 25,
            "MutantSource": "(cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (#f (NumV (/ (NumV-n a) (NumV-n b)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 52,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 133,
            "MutantSourceCol": 25,
            "MutantSource": "(cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 53,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 133,
            "MutantSourceCol": 25,
            "MutantSource": "(cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (else (NumV (/ (NumV-n a) (NumV-n b)))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((= (NumV-n b) 0) (error (quote prim-helper) \\\"ZNQR: Div by 0\\\")) (#t (NumV (/ (NumV-n a) (NumV-n b)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 54,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 135,
            "MutantSourceCol": 39,
            "MutantSource": "(/ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 55,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 135,
            "MutantSourceCol": 39,
            "MutantSource": "(/ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 56,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 136,
            "MutantSourceCol": 31,
            "MutantSource": "(* (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 57,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 136,
            "MutantSourceCol": 31,
            "MutantSource": "(* (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 58,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 137,
            "MutantSourceCol": 31,
            "MutantSource": "(+ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 59,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 137,
            "MutantSourceCol": 31,
            "MutantSource": "(+ (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 60,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 138,
            "MutantSourceCol": 31,
            "MutantSource": "(- (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 61,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 138,
            "MutantSourceCol": 31,
            "MutantSource": "(- (NumV-n a) (NumV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 62,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 142,
            "MutantSourceCol": 16,
            "MutantSource": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 63,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 142,
            "MutantSourceCol": 16,
            "MutantSource": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) (#f (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 64,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 142,
            "MutantSourceCol": 16,
            "MutantSource": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (#f (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 65,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 142,
            "MutantSourceCol": 16,
            "MutantSource": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 66,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 142,
            "MutantSourceCol": 16,
            "MutantSource": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) (#t (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 67,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 142,
            "MutantSourceCol": 16,
            "MutantSource": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (else (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b)))) (BoolV (equal? a b))) ((symbol=? op (quote equal?)) (BoolV #f)) (#t (error (quote prim-helper) \\\"ZNQR: Invalid argument for primitive operator\\\")))",
            "Result": "failed"
        },
        {
            "NumMutant": 68,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 19,
            "MutantSource": "(and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))))",
            "Result": "failed"
        },
        {
            "NumMutant": 69,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 19,
            "MutantSource": "(and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (symbol=? op (quote equal?)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 70,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 19,
            "MutantSource": "(and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))))",
            "Result": "failed"
        },
        {
            "NumMutant": 71,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 19,
            "MutantSource": "(and (symbol=? op (quote equal?)) (not (or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (symbol=? op (quote equal?)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 72,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (PrimV? b) (ClosV? a) (ClosV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 73,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? a) #f (ClosV? a) (ClosV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 74,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? a) (PrimV? b) #f (ClosV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 75,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? a) (PrimV? b) (ClosV? a) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 76,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (PrimV? b) (ClosV? a) (ClosV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 77,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? a) #t (ClosV? a) (ClosV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 78,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? a) (PrimV? b) #t (ClosV? b))",
            "Result": "failed"
        },
        {
            "NumMutant": 79,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 143,
            "MutantSourceCol": 51,
            "MutantSource": "(or (PrimV? a) (PrimV? b) (ClosV? a) (ClosV? b))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? a) (PrimV? b) (ClosV? a) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 80,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 152,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "Result": "failed"
        },
        {
            "NumMutant": 81,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 152,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? params) #f) (#f #t) (else (check-dup-params (rest params))))",
            "Result": "failed"
        },
        {
            "NumMutant": 82,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 152,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (#f (check-dup-params (rest params))))",
            "Result": "failed"
        },
        {
            "NumMutant": 83,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 152,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "Result": "failed"
        },
        {
            "NumMutant": 84,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 152,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? params) #f) (#t #t) (else (check-dup-params (rest params))))",
            "Result": "failed"
        },
        {
            "NumMutant": 85,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 152,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (else (check-dup-params (rest params))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? params) #f) ((contains? (rest params) (first params)) #t) (#t (check-dup-params (rest params))))",
            "Result": "failed"
        },
        {
            "NumMutant": 86,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 161,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "Result": "failed"
        },
        {
            "NumMutant": 87,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 161,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) #f) (#f #t) (else (contains? (rest l) sym)))",
            "Result": "failed"
        },
        {
            "NumMutant": 88,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 161,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (#f (contains? (rest l) sym)))",
            "Result": "failed"
        },
        {
            "NumMutant": 89,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 161,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "Result": "failed"
        },
        {
            "NumMutant": 90,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 161,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) #f) (#t #t) (else (contains? (rest l) sym)))",
            "Result": "failed"
        },
        {
            "NumMutant": 91,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 161,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (else (contains? (rest l) sym)))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? l) #f) ((symbol=? (first l) sym) #t) (#t (contains? (rest l) sym)))",
            "Result": "failed"
        },
        {
            "NumMutant": 92,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 168,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 93,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 168,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (#f (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 94,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 168,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 95,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 168,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (#t (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 96,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 170,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 97,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 170,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (#f (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 98,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 170,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 99,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-13",
            "MutantSourceRow": 170,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-13",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (#t (lookup for (rest env))))",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-13.rkt"
}