{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 30,
            "MutantSourceCol": 2,
            "MutantSource": "(if mainFuncCheck (interp (FunDefC-body mainFuncCheck) funs) (error (quote ZNQR) \\\"no main method found\\\"))",
            "MutantDestinationFile": "program3/shuffled-24",
            "MutantDestinationRow": 30,
            "MutantDestinationCol": 20,
            "MutantDestination": "(interp (FunDefC-body mainFuncCheck) funs)",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 30,
            "MutantSourceCol": 2,
            "MutantSource": "(if mainFuncCheck (interp (FunDefC-body mainFuncCheck) funs) (error (quote ZNQR) \\\"no main method found\\\"))",
            "MutantDestinationFile": "program3/shuffled-24",
            "MutantDestinationRow": 30,
            "MutantDestinationCol": 63,
            "MutantDestination": "(error (quote ZNQR) \\\"no main method found\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 35,
            "MutantSourceCol": 2,
            "MutantSource": "(if (eq? (length fun-sexps) 0) (quote ()) (match (first fun-sexps) ((list (quote func) name arg body) (cons (parse-fundef (first fun-sexps)) (parse-prog (rest fun-sexps)))) ((list (quote func) name body) (cons (parse-fundef (first fun-sexps)) (parse-pro...",
            "MutantDestinationFile": "program3/shuffled-24",
            "MutantDestinationRow": 35,
            "MutantDestinationCol": 33,
            "MutantDestination": "(quote ())",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 35,
            "MutantSourceCol": 2,
            "MutantSource": "(if (eq? (length fun-sexps) 0) (quote ()) (match (first fun-sexps) ((list (quote func) name arg body) (cons (parse-fundef (first fun-sexps)) (parse-prog (rest fun-sexps)))) ((list (quote func) name body) (cons (parse-fundef (first fun-sexps)) (parse-pro...",
            "MutantDestinationFile": "program3/shuffled-24",
            "MutantDestinationRow": 36,
            "MutantDestinationCol": 4,
            "MutantDestination": "(match (first fun-sexps) ((list (quote func) name arg body) (cons (parse-fundef (first fun-sexps)) (parse-prog (rest fun-sexps)))) ((list (quote func) name body) (cons (parse-fundef (first fun-sexps)) (parse-prog (rest fun-sexps)))) (else (error (quote ...",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 61,
            "MutantSourceCol": 19,
            "MutantSource": "(+ (interp l fds) (interp r fds))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin interp l fds)",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 61,
            "MutantSourceCol": 19,
            "MutantSource": "(+ (interp l fds) (interp r fds))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin interp r fds)",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 62,
            "MutantSourceCol": 19,
            "MutantSource": "(* (interp l fds) (interp r fds))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin interp l fds)",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 62,
            "MutantSourceCol": 19,
            "MutantSource": "(* (interp l fds) (interp r fds))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin interp r fds)",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "take-first-if",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 63,
            "MutantSourceCol": 26,
            "MutantSource": "(if (<= (interp ts fds) 0) (interp th fds) (interp el fds))",
            "MutantDestinationFile": "program3/shuffled-24",
            "MutantDestinationRow": 63,
            "MutantDestinationCol": 53,
            "MutantDestination": "(interp th fds)",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "take-second-if",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 63,
            "MutantSourceCol": 26,
            "MutantSource": "(if (<= (interp ts fds) 0) (interp th fds) (interp el fds))",
            "MutantDestinationFile": "program3/shuffled-24",
            "MutantDestinationRow": 63,
            "MutantDestinationCol": 69,
            "MutantDestination": "(interp el fds)",
            "Result": "passed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 79,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? fds) (error (quote ZNQR) \\\"reference to undefined function\\\")) ((cons? fds) (cond ((equal? n (FunDefC-name (first fds))) (first fds)) (else (get-fundef n (rest fds))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"reference to undefined function\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 79,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? fds) (error (quote ZNQR) \\\"reference to undefined function\\\")) ((cons? fds) (cond ((equal? n (FunDefC-name (first fds))) (first fds)) (else (get-fundef n (rest fds))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((equal? n (FunDefC-name (first fds))) (first fds)) (else (get-fundef n (rest fds)))))",
            "Result": "passed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 83,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((equal? n (FunDefC-name (first fds))) (first fds)) (else (get-fundef n (rest fds))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (first fds))",
            "Result": "passed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 83,
            "MutantSourceCol": 5,
            "MutantSource": "(cond ((equal? n (FunDefC-name (first fds))) (first fds)) (else (get-fundef n (rest fds))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (get-fundef n (rest fds)))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 91,
            "MutantSourceCol": 13,
            "MutantSource": "(cond ((symbol=? s for) what) (else in))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin what)",
            "Result": "passed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-24",
            "MutantSourceRow": 91,
            "MutantSourceCol": 13,
            "MutantSource": "(cond ((symbol=? s for) what) (else in))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin in)",
            "Result": "failed"
        }
    ],
    "MutationScore": 0.75,
    "TestFile": "program3/shuffled-24.rkt"
}