{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 31,
            "MutantSourceCol": 73,
            "MutantSource": "(+ (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 31,
            "MutantSourceCol": 73,
            "MutantSource": "(+ (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 21,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 32,
            "MutantSourceCol": 73,
            "MutantSource": "(- (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 32,
            "MutantSourceCol": 73,
            "MutantSource": "(- (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 25,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 33,
            "MutantSourceCol": 73,
            "MutantSource": "(* (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 33,
            "MutantSourceCol": 73,
            "MutantSource": "(* (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 29,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 35,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((= (numV-n b) 0) (error (quote ZNQR) \\\"Divide by zero\\\")) (else (numV (/ (numV-n a) (numV-n b)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"Divide by zero\\\"))",
            "Result": "passed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 35,
            "MutantSourceCol": 31,
            "MutantSource": "(cond ((= (numV-n b) 0) (error (quote ZNQR) \\\"Divide by zero\\\")) (else (numV (/ (numV-n a) (numV-n b)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (numV (/ (numV-n a) (numV-n b))))",
            "Result": "passed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 36,
            "MutantSourceCol": 49,
            "MutantSource": "(/ (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n a)",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 36,
            "MutantSourceCol": 49,
            "MutantSource": "(/ (numV-n a) (numV-n b))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 33,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n b)",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 55,
            "MutantSourceCol": 15,
            "MutantSource": "(cond ((equal? b #t) \\\"true\\\") ((equal? b #f) \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"true\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 55,
            "MutantSourceCol": 15,
            "MutantSource": "(cond ((equal? b #t) \\\"true\\\") ((equal? b #f) \\\"false\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 64,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((real? s) (numV s)) ((boolean? s) (boolV s)) ((string? s) (stringV s)) ((symbol? s) (cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quot...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (numV s))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 64,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((real? s) (numV s)) ((boolean? s) (boolV s)) ((string? s) (stringV s)) ((symbol? s) (cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quot...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (boolV s))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 64,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((real? s) (numV s)) ((boolean? s) (boolV s)) ((string? s) (stringV s)) ((symbol? s) (cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quot...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (stringV s))",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 64,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((real? s) (numV s)) ((boolean? s) (boolV s)) ((string? s) (stringV s)) ((symbol? s) (cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quot...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quote =)))) (idC (cast s Symbol))) (else (error (quote ZNQR) \\\"parse: illegal idC\\\"))))",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 64,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((real? s) (numV s)) ((boolean? s) (boolV s)) ((string? s) (stringV s)) ((symbol? s) (cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quot...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (match s ((list (quote if) test th el) (ifC (parse test) (parse th) (parse el))) ((list (quote var) (list args (quote =) val) ... body) (appC (parse body) (map parse (cast args (Listof Symbol))))) ((list (list args ...) (quote ->) body) (funV (ca...",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 64,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((real? s) (numV s)) ((boolean? s) (boolV s)) ((string? s) (stringV s)) ((symbol? s) (cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quot...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"parse: fell off\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 68,
            "MutantSourceCol": 17,
            "MutantSource": "(cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quote =)))) (idC (cast s Symbol))) (else (error (quote ZNQR) \\\"parse: illegal idC\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (idC (cast s Symbol)))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 68,
            "MutantSourceCol": 17,
            "MutantSource": "(cond ((not (or (symbol=? (cast s Symbol) (quote var)) (symbol=? (cast s Symbol) (quote if)) (symbol=? (cast s Symbol) (quote ->)) (symbol=? (cast s Symbol) (quote =)))) (idC (cast s Symbol))) (else (error (quote ZNQR) \\\"parse: illegal idC\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"parse: illegal idC\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 86,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (= (length c) (length v)) (= 0 (length c))) env) ((= (length c) (length v)) (extend-env (binding (first c) (first v)) (mult-extend-env (rest c) (rest v) env))) (else (error (quote ZNQR) \\\"mult-extend-env: lists are of unequal length\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin env)",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 86,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (= (length c) (length v)) (= 0 (length c))) env) ((= (length c) (length v)) (extend-env (binding (first c) (first v)) (mult-extend-env (rest c) (rest v) env))) (else (error (quote ZNQR) \\\"mult-extend-env: lists are of unequal length\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (extend-env (binding (first c) (first v)) (mult-extend-env (rest c) (rest v) env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 86,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((and (= (length c) (length v)) (= 0 (length c))) env) ((= (length c) (length v)) (extend-env (binding (first c) (first v)) (mult-extend-env (rest c) (rest v) env))) (else (error (quote ZNQR) \\\"mult-extend-env: lists are of unequal length\\\")))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"mult-extend-env: lists are of unequal length\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 98,
            "MutantSourceCol": 22,
            "MutantSource": "(cond ((> (numV-n (cast (interp test env) numV)) 0) (interp th env)) (else (interp el env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp th env))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 98,
            "MutantSourceCol": 22,
            "MutantSource": "(cond ((> (numV-n (cast (interp test env) numV)) 0) (interp th env)) (else (interp el env)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (interp el env))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? exp) (quote ())) (else (cons (interp (first exp) env) (interp-list (rest exp) env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (quote ()))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 115,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? exp) (quote ())) (else (cons (interp (first exp) env) (interp-list (rest exp) env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cons (interp (first exp) env) (interp-list (rest exp) env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 122,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"lookup: name not found\\\")) (else (cond ((symbol=? for (binding-name (first env))) (binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (error (quote ZNQR) \\\"lookup: name not found\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 122,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote ZNQR) \\\"lookup: name not found\\\")) (else (cond ((symbol=? for (binding-name (first env))) (binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (cond ((symbol=? for (binding-name (first env))) (binding-val (first env))) (else (lookup for (rest env)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 124,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (binding-name (first env))) (binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (binding-val (first env)))",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "permute-cond",
            "MutantSourceFile": "program3/shuffled-26",
            "MutantSourceRow": 124,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (binding-name (first env))) (binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 58,
            "MutantDestinationCol": 12,
            "MutantDestination": "(begin (lookup for (rest env)))",
            "Result": "failed"
        }
    ],
    "MutationScore": 0.935484,
    "TestFile": "program3/shuffled-26.rkt"
}