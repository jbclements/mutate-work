{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 76,
            "MutantSourceCol": 26,
            "MutantSource": "(if (BooleanV? (interp test env)) (if (BooleanV-bool (cast (interp test env) BooleanV)) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test expression does not produce boolean\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (if (BooleanV-bool (cast (interp test env) BooleanV)) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test expression does not produce boolean\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 76,
            "MutantSourceCol": 26,
            "MutantSource": "(if (BooleanV? (interp test env)) (if (BooleanV-bool (cast (interp test env) BooleanV)) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test expression does not produce boolean\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (if (BooleanV-bool (cast (interp test env) BooleanV)) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test expression does not produce boolean\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 77,
            "MutantSourceCol": 30,
            "MutantSource": "(if (BooleanV-bool (cast (interp test env) BooleanV)) (interp then env) (interp else env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (interp then env) (interp else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 77,
            "MutantSourceCol": 30,
            "MutantSource": "(if (BooleanV-bool (cast (interp test env) BooleanV)) (interp then env) (interp else env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (interp then env) (interp else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 83,
            "MutantSourceCol": 35,
            "MutantSource": "(if (= (length args) 2) (prim-handler op (interp (first args) env) (interp (second args) env)) (error (quote interp) \\\"ZNQR: too many operator args\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (prim-handler op (interp (first args) env) (interp (second args) env)) (error (quote interp) \\\"ZNQR: too many operator args\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 83,
            "MutantSourceCol": 35,
            "MutantSource": "(if (= (length args) 2) (prim-handler op (interp (first args) env) (interp (second args) env)) (error (quote interp) \\\"ZNQR: too many operator args\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (prim-handler op (interp (first args) env) (interp (second args) env)) (error (quote interp) \\\"ZNQR: too many operator args\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 86,
            "MutantSourceCol": 58,
            "MutantSource": "(if (= (length args) (length clos-params)) (interp body (append (for/list : (Listof Binding) ((param clos-params) (arg args)) (Binding param (interp arg env))) clos-env)) (error (quote interp) \\\"ZNQR: mismatching args and params\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (interp body (append (for/list : (Listof Binding) ((param clos-params) (arg args)) (Binding param (interp arg env))) clos-env)) (error (quote interp) \\\"ZNQR: mismatching args and params\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 86,
            "MutantSourceCol": 58,
            "MutantSource": "(if (= (length args) (length clos-params)) (interp body (append (for/list : (Listof Binding) ((param clos-params) (arg args)) (Binding param (interp arg env))) clos-env)) (error (quote interp) \\\"ZNQR: mismatching args and params\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (interp body (append (for/list : (Listof Binding) ((param clos-params) (arg args)) (Binding param (interp arg env))) clos-env)) (error (quote interp) \\\"ZNQR: mismatching args and params\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 102,
            "MutantSourceCol": 21,
            "MutantSource": "(if (list-contains sym key-lst) (error (quote parse) \\\"ZNQR: reserved word ~e used in IdC\\\" sym) (IdC sym))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote parse) \\\"ZNQR: reserved word ~e used in IdC\\\" sym) (IdC sym))",
            "Result": "failed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 102,
            "MutantSourceCol": 21,
            "MutantSource": "(if (list-contains sym key-lst) (error (quote parse) \\\"ZNQR: reserved word ~e used in IdC\\\" sym) (IdC sym))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote parse) \\\"ZNQR: reserved word ~e used in IdC\\\" sym) (IdC sym))",
            "Result": "failed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 106,
            "MutantSourceCol": 49,
            "MutantSource": "(if (dup-check (cast syms (Listof Symbol))) (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (lamC (cast syms (Listof Symbol)) (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (lamC (cast syms (Listof Symbol)) (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 106,
            "MutantSourceCol": 49,
            "MutantSource": "(if (dup-check (cast syms (Listof Symbol))) (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (lamC (cast syms (Listof Symbol)) (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (lamC (cast syms (Listof Symbol)) (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 109,
            "MutantSourceCol": 59,
            "MutantSource": "(if (dup-check (cast syms (Listof Symbol))) (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (AppC (lamC (cast syms (Listof Symbol)) (parse body)) (map parse (cast exprs (Listof Sexp)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (AppC (lamC (cast syms (Listof Symbol)) (parse body)) (map parse (cast exprs (Listof Sexp)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 109,
            "MutantSourceCol": 59,
            "MutantSource": "(if (dup-check (cast syms (Listof Symbol))) (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (AppC (lamC (cast syms (Listof Symbol)) (parse body)) (map parse (cast exprs (Listof Sexp)))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote parse) \\\"ZNQR: duplicate parameter names\\\") (AppC (lamC (cast syms (Listof Symbol)) (parse body)) (map parse (cast exprs (Listof Sexp)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 119,
            "MutantSourceCol": 2,
            "MutantSource": "(if (list-contains oper (quote (+ - * / <=))) (cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equa...",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 119,
            "MutantSourceCol": 2,
            "MutantSource": "(if (list-contains oper (quote (+ - * / <=))) (cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equa...",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 119,
            "MutantSourceCol": 27,
            "MutantSource": "(+ - * / <=)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . -)",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 119,
            "MutantSourceCol": 27,
            "MutantSource": "(+ - * / <=)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . *)",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 119,
            "MutantSourceCol": 27,
            "MutantSource": "(+ - * / <=)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . /)",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 119,
            "MutantSourceCol": 27,
            "MutantSource": "(+ - * / <=)",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin . <=)",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 120,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n va...",
            "Result": "failed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 120,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper...",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 120,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n va...",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 120,
            "MutantSourceCol": 6,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper...",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 9,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (numV? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 9,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (numV? val1) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 9,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (numV? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 9,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (numV? val1) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) (#f (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) (#f (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) (#f (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "Result": "failed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) (#t (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) (#t (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) (#t (if (= (numV-n val2) 0) (error (quote prim-handl...",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 121,
            "MutantSourceCol": 41,
            "MutantSource": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((equal? oper (quote +)) (numV (+ (numV-n val1) (numV-n val2)))) ((equal? oper (quote -)) (numV (- (numV-n val1) (numV-n val2)))) ((equal? oper (quote *)) (numV (* (numV-n val1) (numV-n val2)))) ((equal? oper (quote /)) (if (= (numV-n val2) 0) (er...",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 122,
            "MutantSourceCol": 67,
            "MutantSource": "(+ (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val1)",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 122,
            "MutantSourceCol": 67,
            "MutantSource": "(+ (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val2)",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 123,
            "MutantSourceCol": 67,
            "MutantSource": "(- (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val1)",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 123,
            "MutantSourceCol": 67,
            "MutantSource": "(- (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val2)",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 124,
            "MutantSourceCol": 67,
            "MutantSource": "(* (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val1)",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 124,
            "MutantSourceCol": 67,
            "MutantSource": "(* (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val2)",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 125,
            "MutantSourceCol": 61,
            "MutantSource": "(if (= (numV-n val2) 0) (error (quote prim-handler) \\\"ZNQR: division by 0\\\") (numV (/ (numV-n val1) (numV-n val2))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote prim-handler) \\\"ZNQR: division by 0\\\") (numV (/ (numV-n val1) (numV-n val2))))",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 125,
            "MutantSourceCol": 61,
            "MutantSource": "(if (= (numV-n val2) 0) (error (quote prim-handler) \\\"ZNQR: division by 0\\\") (numV (/ (numV-n val1) (numV-n val2))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote prim-handler) \\\"ZNQR: division by 0\\\") (numV (/ (numV-n val1) (numV-n val2))))",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 127,
            "MutantSourceCol": 71,
            "MutantSource": "(/ (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val1)",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 127,
            "MutantSourceCol": 71,
            "MutantSource": "(/ (numV-n val1) (numV-n val2))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin numV-n val2)",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 130,
            "MutantSourceCol": 6,
            "MutantSource": "(if (equal? oper (quote equal?)) (cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2))...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 va...",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 130,
            "MutantSourceCol": 6,
            "MutantSource": "(if (equal? oper (quote equal?)) (cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2))...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 va...",
            "Result": "failed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (else (BooleanV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) (#f (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (else (BooleanV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 52,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) (#f (BooleanV (equal? val1 val2))) (else (BooleanV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 53,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "Result": "failed"
        },
        {
            "NumMutant": 54,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (else (BooleanV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 55,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) (#t (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (else (BooleanV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 56,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) (#t (BooleanV (equal? val1 val2))) (else (BooleanV #f)))",
            "Result": "failed"
        },
        {
            "NumMutant": 57,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 131,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((and (numV? val1) (numV? val2)) (BooleanV (= (numV-n val1) (numV-n val2)))) ((and (BooleanV? val1) (BooleanV? val2)) (BooleanV (and (BooleanV-bool val1) (BooleanV-bool val2)))) ((and (string? val1) (string? val2)) (BooleanV (equal? val1 val2))) (...",
            "Result": "failed"
        },
        {
            "NumMutant": 58,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 132,
            "MutantSourceCol": 13,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (numV? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 59,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 132,
            "MutantSourceCol": 13,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (numV? val1) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 60,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 132,
            "MutantSourceCol": 13,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (numV? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 61,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 132,
            "MutantSourceCol": 13,
            "MutantSource": "(and (numV? val1) (numV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (numV? val1) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 62,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 13,
            "MutantSource": "(and (BooleanV? val1) (BooleanV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (BooleanV? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 63,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 13,
            "MutantSource": "(and (BooleanV? val1) (BooleanV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (BooleanV? val1) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 64,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 13,
            "MutantSource": "(and (BooleanV? val1) (BooleanV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (BooleanV? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 65,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 13,
            "MutantSource": "(and (BooleanV? val1) (BooleanV? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (BooleanV? val1) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 66,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 63,
            "MutantSource": "(and (BooleanV-bool val1) (BooleanV-bool val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (BooleanV-bool val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 67,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 63,
            "MutantSource": "(and (BooleanV-bool val1) (BooleanV-bool val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (BooleanV-bool val1) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 68,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 63,
            "MutantSource": "(and (BooleanV-bool val1) (BooleanV-bool val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (BooleanV-bool val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 69,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 133,
            "MutantSourceCol": 63,
            "MutantSource": "(and (BooleanV-bool val1) (BooleanV-bool val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (BooleanV-bool val1) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 70,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 134,
            "MutantSourceCol": 13,
            "MutantSource": "(and (string? val1) (string? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (string? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 71,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 134,
            "MutantSourceCol": 13,
            "MutantSource": "(and (string? val1) (string? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (string? val1) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 72,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 134,
            "MutantSourceCol": 13,
            "MutantSource": "(and (string? val1) (string? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (string? val2))",
            "Result": "failed"
        },
        {
            "NumMutant": 73,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 134,
            "MutantSourceCol": 13,
            "MutantSource": "(and (string? val1) (string? val2))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (string? val1) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 74,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 144,
            "MutantSourceCol": 24,
            "MutantSource": "(if (BooleanV-bool bool) \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 75,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 144,
            "MutantSourceCol": 24,
            "MutantSource": "(if (BooleanV-bool bool) \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 76,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 154,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 77,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 154,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (#f (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 78,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 154,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 79,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 154,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found ~e\\\" for)) (#t (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 80,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 156,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 81,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 156,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (#f (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 82,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 156,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 83,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 156,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (#t (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 84,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 165,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f #f) (else (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 85,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 165,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? lst) #f) (#f (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 86,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 165,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t #f) (else (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 87,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 165,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? lst) #f) (#t (if (equal? sym (first lst)) #t (list-contains sym (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 88,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 167,
            "MutantSourceCol": 10,
            "MutantSource": "(if (equal? sym (first lst)) #t (list-contains sym (rest lst)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f #t (list-contains sym (rest lst)))",
            "Result": "failed"
        },
        {
            "NumMutant": 89,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 167,
            "MutantSourceCol": 10,
            "MutantSource": "(if (equal? sym (first lst)) #t (list-contains sym (rest lst)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t #t (list-contains sym (rest lst)))",
            "Result": "failed"
        },
        {
            "NumMutant": 90,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 175,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f #f) (else (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 91,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 175,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? lst) #f) (#f (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 92,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 175,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t #f) (else (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 93,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 175,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? lst) #f) (else (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "MutantDestinationFile": "program3/shuffled-20",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? lst) #f) (#t (if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))))",
            "Result": "failed"
        },
        {
            "NumMutant": 94,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 177,
            "MutantSourceCol": 10,
            "MutantSource": "(if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f #t (dup-check (rest lst)))",
            "Result": "failed"
        },
        {
            "NumMutant": 95,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-20",
            "MutantSourceRow": 177,
            "MutantSourceCol": 10,
            "MutantSource": "(if (list-contains (first lst) (rest lst)) #t (dup-check (rest lst)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t #t (dup-check (rest lst)))",
            "Result": "failed"
        }
    ],
    "MutationScore": null,
    "TestFile": "program3/shuffled-20.rkt"
}