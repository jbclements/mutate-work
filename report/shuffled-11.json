{
    "MutationResults": [
        {
            "NumMutant": 0,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 65,
            "MutantSourceCol": 45,
            "MutantSource": "(if (check-duplicates (cast s (Listof Symbol))) (error (quote interp) \\\"ZNQR: illegal duplicate parameter names\\\") (lamC (cast s (Listof Symbol)) (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote interp) \\\"ZNQR: illegal duplicate parameter names\\\") (lamC (cast s (Listof Symbol)) (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 1,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 65,
            "MutantSourceCol": 45,
            "MutantSource": "(if (check-duplicates (cast s (Listof Symbol))) (error (quote interp) \\\"ZNQR: illegal duplicate parameter names\\\") (lamC (cast s (Listof Symbol)) (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote interp) \\\"ZNQR: illegal duplicate parameter names\\\") (lamC (cast s (Listof Symbol)) (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 2,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 68,
            "MutantSourceCol": 26,
            "MutantSource": "(if (equal? (length parts) 3) (ifC (parse (first parts)) (parse (second parts)) (parse (third parts))) (error (quote parse) \\\"ZNQR: incorrect if formatting\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (ifC (parse (first parts)) (parse (second parts)) (parse (third parts))) (error (quote parse) \\\"ZNQR: incorrect if formatting\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 3,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 68,
            "MutantSourceCol": 26,
            "MutantSource": "(if (equal? (length parts) 3) (ifC (parse (first parts)) (parse (second parts)) (parse (third parts))) (error (quote parse) \\\"ZNQR: incorrect if formatting\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (ifC (parse (first parts)) (parse (second parts)) (parse (third parts))) (error (quote parse) \\\"ZNQR: incorrect if formatting\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 4,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 19,
            "MutantSource": "(if (or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->))) (error (quote parse) \\\"ZNQR: ~e is not a valid identifier\\\" s) (idC s))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote parse) \\\"ZNQR: ~e is not a valid identifier\\\" s) (idC s))",
            "Result": "failed"
        },
        {
            "NumMutant": 5,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 19,
            "MutantSource": "(if (or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->))) (error (quote parse) \\\"ZNQR: ~e is not a valid identifier\\\" s) (idC s))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote parse) \\\"ZNQR: ~e is not a valid identifier\\\" s) (idC s))",
            "Result": "failed"
        },
        {
            "NumMutant": 6,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "Result": "passed"
        },
        {
            "NumMutant": 7,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? s (quote if)) #f (equal? s (quote var)) (equal? s (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 8,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? s (quote if)) (equal? s (quote =)) #f (equal? s (quote ->)))",
            "Result": "passed"
        },
        {
            "NumMutant": 9,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) #f)",
            "Result": "passed"
        },
        {
            "NumMutant": 10,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 11,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? s (quote if)) #t (equal? s (quote var)) (equal? s (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 12,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? s (quote if)) (equal? s (quote =)) #t (equal? s (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 13,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 76,
            "MutantSourceCol": 23,
            "MutantSource": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) (equal? s (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? s (quote if)) (equal? s (quote =)) (equal? s (quote var)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 14,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 83,
            "MutantSourceCol": 2,
            "MutantSource": "(if (check-duplicates vars) (error (quote desugar) \\\"ZNQR: illegal duplicate parameter names\\\") (if (and (empty? vars) (contains-eq? body)) (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote cont...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote desugar) \\\"ZNQR: illegal duplicate parameter names\\\") (if (and (empty? vars) (contains-eq? body)) (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR:...",
            "Result": "failed"
        },
        {
            "NumMutant": 15,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 83,
            "MutantSourceCol": 2,
            "MutantSource": "(if (check-duplicates vars) (error (quote desugar) \\\"ZNQR: illegal duplicate parameter names\\\") (if (and (empty? vars) (contains-eq? body)) (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote cont...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote desugar) \\\"ZNQR: illegal duplicate parameter names\\\") (if (and (empty? vars) (contains-eq? body)) (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR:...",
            "Result": "failed"
        },
        {
            "NumMutant": 16,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 85,
            "MutantSourceCol": 6,
            "MutantSource": "(if (and (empty? vars) (contains-eq? body)) (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body))))",
            "Result": "failed"
        },
        {
            "NumMutant": 17,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 85,
            "MutantSourceCol": 6,
            "MutantSource": "(if (and (empty? vars) (contains-eq? body)) (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote desugar) \\\"ZNQR: function definition requires a body\\\") (if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body))))",
            "Result": "failed"
        },
        {
            "NumMutant": 18,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 85,
            "MutantSourceCol": 10,
            "MutantSource": "(and (empty? vars) (contains-eq? body))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (contains-eq? body))",
            "Result": "failed"
        },
        {
            "NumMutant": 19,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 85,
            "MutantSourceCol": 10,
            "MutantSource": "(and (empty? vars) (contains-eq? body))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (empty? vars) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 20,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 85,
            "MutantSourceCol": 10,
            "MutantSource": "(and (empty? vars) (contains-eq? body))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (contains-eq? body))",
            "Result": "passed"
        },
        {
            "NumMutant": 21,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 85,
            "MutantSourceCol": 10,
            "MutantSource": "(and (empty? vars) (contains-eq? body))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (empty? vars) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 22,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 87,
            "MutantSourceCol": 10,
            "MutantSource": "(if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 23,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 87,
            "MutantSourceCol": 10,
            "MutantSource": "(if (contains-illegal? vars) (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote contains-illegal?) \\\"ZNQR: contains illegal identifier name\\\") (lamC vars (parse body)))",
            "Result": "failed"
        },
        {
            "NumMutant": 24,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "Result": "failed"
        },
        {
            "NumMutant": 25,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? s) #f) (#f #t) (else (contains-illegal? (rest s))))",
            "Result": "failed"
        },
        {
            "NumMutant": 26,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (#f (contains-illegal? (rest s))))",
            "Result": "failed"
        },
        {
            "NumMutant": 27,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "Result": "failed"
        },
        {
            "NumMutant": 28,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? s) #f) (#t #t) (else (contains-illegal? (rest s))))",
            "Result": "failed"
        },
        {
            "NumMutant": 29,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 99,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (else (contains-illegal? (rest s))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? s) #f) ((or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->))) #t) (#t (contains-illegal? (rest s))))",
            "Result": "passed"
        },
        {
            "NumMutant": 30,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 31,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? (first s) (quote if)) #f (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "Result": "passed"
        },
        {
            "NumMutant": 32,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) #f (equal? (first s) (quote ->)))",
            "Result": "passed"
        },
        {
            "NumMutant": 33,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 34,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 35,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? (first s) (quote if)) #t (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 36,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) #t (equal? (first s) (quote ->)))",
            "Result": "failed"
        },
        {
            "NumMutant": 37,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 101,
            "MutantSourceCol": 5,
            "MutantSource": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) (equal? (first s) (quote ->)))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (equal? (first s) (quote if)) (equal? (first s) (quote =)) (equal? (first s) (quote var)) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 38,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 114,
            "MutantSourceCol": 35,
            "MutantSource": "(if (equal? (length a) (length params)) (append (map (lambda ((name : Symbol) (val : ExprC)) (Binding name (interp val env))) params a) cur-env) (error (quote interp) \\\"ZNQR: number of arguments supplied does not match parameters\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (append (map (lambda ((name : Symbol) (val : ExprC)) (Binding name (interp val env))) params a) cur-env) (error (quote interp) \\\"ZNQR: number of arguments supplied does not match parameters\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 39,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 114,
            "MutantSourceCol": 35,
            "MutantSource": "(if (equal? (length a) (length params)) (append (map (lambda ((name : Symbol) (val : ExprC)) (Binding name (interp val env))) params a) cur-env) (error (quote interp) \\\"ZNQR: number of arguments supplied does not match parameters\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (append (map (lambda ((name : Symbol) (val : ExprC)) (Binding name (interp val env))) params a) cur-env) (error (quote interp) \\\"ZNQR: number of arguments supplied does not match parameters\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 40,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 122,
            "MutantSourceCol": 25,
            "MutantSource": "(if (BoolV? check) (if (BoolV-bool check) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test value for if must be boolean\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (if (BoolV-bool check) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test value for if must be boolean\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 41,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 122,
            "MutantSourceCol": 25,
            "MutantSource": "(if (BoolV? check) (if (BoolV-bool check) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test value for if must be boolean\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (if (BoolV-bool check) (interp then env) (interp else env)) (error (quote interp) \\\"ZNQR: test value for if must be boolean\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 42,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 123,
            "MutantSourceCol": 29,
            "MutantSource": "(if (BoolV-bool check) (interp then env) (interp else env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (interp then env) (interp else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 43,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 123,
            "MutantSourceCol": 29,
            "MutantSource": "(if (BoolV-bool check) (interp then env) (interp else env))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (interp then env) (interp else env))",
            "Result": "failed"
        },
        {
            "NumMutant": 44,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 129,
            "MutantSourceCol": 2,
            "MutantSource": "(if (equal? (length args) 2) (let ((left (interp (first args) env))) (let ((right (interp (second args) env))) (match op ((quote +) (if (and (NumV? left) (NumV? right)) (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands o...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (let ((left (interp (first args) env))) (let ((right (interp (second args) env))) (match op ((quote +) (if (and (NumV? left) (NumV? right)) (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of + must be numeric\\\"))...",
            "Result": "failed"
        },
        {
            "NumMutant": 45,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 129,
            "MutantSourceCol": 2,
            "MutantSource": "(if (equal? (length args) 2) (let ((left (interp (first args) env))) (let ((right (interp (second args) env))) (match op ((quote +) (if (and (NumV? left) (NumV? right)) (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands o...",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (let ((left (interp (first args) env))) (let ((right (interp (second args) env))) (match op ((quote +) (if (and (NumV? left) (NumV? right)) (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of + must be numeric\\\"))...",
            "Result": "failed"
        },
        {
            "NumMutant": 46,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 133,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of + must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of + must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 47,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 133,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of + must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (NumV (+ (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of + must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 48,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 133,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 49,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 133,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 50,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 133,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 51,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 133,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 52,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 134,
            "MutantSourceCol": 26,
            "MutantSource": "(+ (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n left)",
            "Result": "failed"
        },
        {
            "NumMutant": 53,
            "MutatorType": "aod-add",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 134,
            "MutantSourceCol": 26,
            "MutantSource": "(+ (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 53,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n right)",
            "Result": "failed"
        },
        {
            "NumMutant": 54,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 136,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (if (equal? (NumV-n right) 0) (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right)))) (error (quote interp) \\\"ZNQR: Both operands of / must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (if (equal? (NumV-n right) 0) (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right)))) (error (quote interp) \\\"ZNQR: Both operands of / must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 55,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 136,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (if (equal? (NumV-n right) 0) (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right)))) (error (quote interp) \\\"ZNQR: Both operands of / must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (if (equal? (NumV-n right) 0) (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right)))) (error (quote interp) \\\"ZNQR: Both operands of / must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 56,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 136,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 57,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 136,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 58,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 136,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 59,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 136,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 60,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 137,
            "MutantSourceCol": 20,
            "MutantSource": "(if (equal? (NumV-n right) 0) (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right))))",
            "Result": "failed"
        },
        {
            "NumMutant": 61,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 137,
            "MutantSourceCol": 20,
            "MutantSource": "(if (equal? (NumV-n right) 0) (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right))))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (error (quote interp) \\\"ZNQR: Cannot divide by 0\\\") (NumV (/ (NumV-n left) (NumV-n right))))",
            "Result": "failed"
        },
        {
            "NumMutant": 62,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 139,
            "MutantSourceCol": 30,
            "MutantSource": "(/ (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n left)",
            "Result": "failed"
        },
        {
            "NumMutant": 63,
            "MutatorType": "aod-div",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 139,
            "MutantSourceCol": 30,
            "MutantSource": "(/ (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 65,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n right)",
            "Result": "failed"
        },
        {
            "NumMutant": 64,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 141,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (NumV (* (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of * must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (NumV (* (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of * must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 65,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 141,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (NumV (* (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of * must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (NumV (* (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of * must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 66,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 141,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 67,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 141,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 68,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 141,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 69,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 141,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 70,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 142,
            "MutantSourceCol": 26,
            "MutantSource": "(* (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n left)",
            "Result": "failed"
        },
        {
            "NumMutant": 71,
            "MutatorType": "aod-mul",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 142,
            "MutantSourceCol": 26,
            "MutantSource": "(* (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 61,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n right)",
            "Result": "failed"
        },
        {
            "NumMutant": 72,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 144,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (NumV (- (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of - must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (NumV (- (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of - must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 73,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 144,
            "MutantSourceCol": 16,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (NumV (- (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of - must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (NumV (- (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of - must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 74,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 144,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 75,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 144,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 76,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 144,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 77,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 144,
            "MutantSourceCol": 20,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 78,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 145,
            "MutantSourceCol": 26,
            "MutantSource": "(- (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n left)",
            "Result": "failed"
        },
        {
            "NumMutant": 79,
            "MutatorType": "aod-minus",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 145,
            "MutantSourceCol": 26,
            "MutantSource": "(- (NumV-n left) (NumV-n right))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 57,
            "MutantDestinationCol": 10,
            "MutantDestination": "(begin NumV-n right)",
            "Result": "failed"
        },
        {
            "NumMutant": 80,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 147,
            "MutantSourceCol": 17,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (BoolV (<= (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of <= must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (BoolV (<= (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of <= must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 81,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 147,
            "MutantSourceCol": 17,
            "MutantSource": "(if (and (NumV? left) (NumV? right)) (BoolV (<= (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of <= must be numeric\\\"))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (BoolV (<= (NumV-n left) (NumV-n right))) (error (quote interp) \\\"ZNQR: Both operands of <= must be numeric\\\"))",
            "Result": "failed"
        },
        {
            "NumMutant": 82,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 147,
            "MutantSourceCol": 21,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #f (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 83,
            "MutatorType": "RC-and->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 147,
            "MutantSourceCol": 21,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #f)",
            "Result": "failed"
        },
        {
            "NumMutant": 84,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 147,
            "MutantSourceCol": 21,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and #t (NumV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 85,
            "MutatorType": "RC-and->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 147,
            "MutantSourceCol": 21,
            "MutantSource": "(and (NumV? left) (NumV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(and (NumV? left) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 86,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 21,
            "MutantSource": "(if (or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right)) (BoolV #f) (BoolV (equal? left right)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f (BoolV #f) (BoolV (equal? left right)))",
            "Result": "failed"
        },
        {
            "NumMutant": 87,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 21,
            "MutantSource": "(if (or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right)) (BoolV #f) (BoolV (equal? left right)))",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t (BoolV #f) (BoolV (equal? left right)))",
            "Result": "failed"
        },
        {
            "NumMutant": 88,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #f (PrimV? right) (ClosV? left) (ClosV? right))",
            "Result": "passed"
        },
        {
            "NumMutant": 89,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? left) #f (ClosV? left) (ClosV? right))",
            "Result": "passed"
        },
        {
            "NumMutant": 90,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? left) (PrimV? right) #f (ClosV? right))",
            "Result": "passed"
        },
        {
            "NumMutant": 91,
            "MutatorType": "RC-or->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? left) (PrimV? right) (ClosV? left) #f)",
            "Result": "passed"
        },
        {
            "NumMutant": 92,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or #t (PrimV? right) (ClosV? left) (ClosV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 93,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? left) #t (ClosV? left) (ClosV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 94,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? left) (PrimV? right) #t (ClosV? right))",
            "Result": "failed"
        },
        {
            "NumMutant": 95,
            "MutatorType": "RC-or->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 150,
            "MutantSourceCol": 25,
            "MutantSource": "(or (PrimV? left) (PrimV? right) (ClosV? left) (ClosV? right))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(or (PrimV? left) (PrimV? right) (ClosV? left) #t)",
            "Result": "failed"
        },
        {
            "NumMutant": 96,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 157,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 97,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 157,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (#f (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 98,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 157,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "failed"
        },
        {
            "NumMutant": 99,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 157,
            "MutantSourceCol": 2,
            "MutantSource": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (else (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((empty? env) (error (quote lookup) \\\"ZNQR: name not found: ~e\\\" for)) (#t (cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))))",
            "Result": "passed"
        },
        {
            "NumMutant": 100,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 159,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#f (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 101,
            "MutatorType": "RC-cond->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 159,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (#f (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 102,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 159,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond (#t (Binding-val (first env))) (else (lookup for (rest env))))",
            "Result": "failed"
        },
        {
            "NumMutant": 103,
            "MutatorType": "RC-cond->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 159,
            "MutantSourceCol": 10,
            "MutantSource": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (else (lookup for (rest env))))",
            "MutantDestinationFile": "program3/shuffled-11",
            "MutantDestinationRow": null,
            "MutantDestinationCol": null,
            "MutantDestination": "(cond ((symbol=? for (Binding-name (first env))) (Binding-val (first env))) (#t (lookup for (rest env))))",
            "Result": "passed"
        },
        {
            "NumMutant": 104,
            "MutatorType": "RC-if->false",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 169,
            "MutantSourceCol": 18,
            "MutantSource": "(if bool \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 90,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #f \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        },
        {
            "NumMutant": 105,
            "MutatorType": "RC-if->true",
            "MutantSourceFile": "program3/shuffled-11",
            "MutantSourceRow": 169,
            "MutantSourceCol": 18,
            "MutantSource": "(if bool \\\"true\\\" \\\"false\\\")",
            "MutantDestinationFile": "mutation-tester",
            "MutantDestinationRow": 93,
            "MutantDestinationCol": 10,
            "MutantDestination": "(if #t \\\"true\\\" \\\"false\\\")",
            "Result": "failed"
        }
    ],
    "MutationScore": 0.877358,
    "TestFile": "program3/shuffled-11.rkt"
}