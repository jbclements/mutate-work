"/#:NUM MUTANT: 0:#/""/#:MUTANT USED: RC-if->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:61:13 (if (hash-has-key? env s) (hash-ref env s) (error (quote interp) \"ZNQR: id not found ~e\" s))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:90:10 (if #f (hash-ref env s) (error (quote interp) \"ZNQR: id not found ~e\" s))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 1:#/""/#:MUTANT USED: RC-if->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:61:13 (if (hash-has-key? env s) (hash-ref env s) (error (quote interp) \"ZNQR: id not found ~e\" s))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:93:10 (if #t (hash-ref env s) (error (quote interp) \"ZNQR: id not found ~e\" s))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 2:#/""/#:MUTANT USED: RC-if->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:67:60 (if boo (interp (first (rest args)) env) (interp (first (rest (rest args))) env))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:90:10 (if #f (interp (first (rest args)) env) (interp (first (rest (rest args))) env))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 3:#/""/#:MUTANT USED: RC-if->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:67:60 (if boo (interp (first (rest args)) env) (interp (first (rest (rest args))) env))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:93:10 (if #t (interp (first (rest args)) env) (interp (first (rest (rest args))) env))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 4:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:73:23 (cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args)))) (else (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 5:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:73:23 (cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (#f (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 6:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:73:23 (cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args)))) (else (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 7:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:73:23 (cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (else (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (length args) (length param)) (define new-env (extend-env clo-env param (map (λ ((arg : ExprC)) (interp arg env)) args))) (interp body new-env)) (#t (error (quote interp) \"ZNQR: applying function to wrong num of args\")))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 8:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:99:2 (cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 9:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:99:2 (cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (#f (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 10:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:99:2 (cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 11:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:99:2 (cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (else (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (NumV? a) (NumV? b)) (NumV (+ (NumV-n a) (NumV-n b)))) (#t (error (quote prim-add) \"ZNQR: must add numbers only\")))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 12:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:100:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 13:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:100:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 14:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:100:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 15:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:100:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 16:#/""/#:MUTANT USED: aod-add:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:100:37 (+ (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:53:10 (begin NumV-n a)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 17:#/""/#:MUTANT USED: aod-add:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:100:37 (+ (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:53:10 (begin NumV-n b)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 18:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:107:2 (cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 19:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:107:2 (cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (#f (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 20:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:107:2 (cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 21:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:107:2 (cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (else (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (NumV? a) (NumV? b)) (NumV (- (NumV-n a) (NumV-n b)))) (#t (error (quote prim-sub) \"ZNQR: must subtract numbers only\")))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 22:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:108:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 23:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:108:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 24:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:108:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 25:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:108:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 26:#/""/#:MUTANT USED: aod-minus:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:108:37 (- (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:57:10 (begin NumV-n a)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 27:#/""/#:MUTANT USED: aod-minus:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:108:37 (- (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:57:10 (begin NumV-n b)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 28:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:115:2 (cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 29:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:115:2 (cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (#f (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 30:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:115:2 (cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 31:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:115:2 (cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (else (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (NumV? a) (NumV? b)) (NumV (* (NumV-n a) (NumV-n b)))) (#t (error (quote prim-mult) \"ZNQR: must multiply numbers only\")))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 32:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:116:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 33:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:116:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 34:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:116:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 35:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:116:5 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 36:#/""/#:MUTANT USED: aod-mul:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:116:37 (* (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:61:10 (begin NumV-n a)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 37:#/""/#:MUTANT USED: aod-mul:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:116:37 (* (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:61:10 (begin NumV-n b)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 38:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:123:2 (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 39:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:123:2 (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) (#f (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 40:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:123:2 (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (#f (error (quote prim-div) \"ZNQR: must divide nu...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 41:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:123:2 (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 42:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:123:2 (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) (#t (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide numbers only\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 43:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:123:2 (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (else (error (quote prim-div) \"ZNQR: must divide ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (positive? (NumV-n b))) (NumV (/ (NumV-n a) (NumV-n b)))) ((and (and (NumV? a) (NumV? b)) (zero? (NumV-n b))) (error (quote prim-div) \"ZNQR: cannot divide by zero\")) (#t (error (quote prim-div) \"ZNQR: must divide nu...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 44:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:5 (and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (positive? (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 45:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:5 (and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 46:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:5 (and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (positive? (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 47:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:5 (and (and (NumV? a) (NumV? b)) (positive? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 48:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 49:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 50:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 51:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 52:#/""/#:MUTANT USED: aod-div:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:66 (/ (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:65:10 (begin NumV-n a)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 53:#/""/#:MUTANT USED: aod-div:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:124:66 (/ (NumV-n a) (NumV-n b))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:65:10 (begin NumV-n b)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 54:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:5 (and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (zero? (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 55:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:5 (and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 56:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:5 (and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (zero? (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 57:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:5 (and (and (NumV? a) (NumV? b)) (zero? (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #t)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 58:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 59:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 60:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 61:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:125:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 62:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:132:2 (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 63:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:132:2 (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) (#f (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 64:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:132:2 (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (#f (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 65:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:132:2 (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 66:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:132:2 (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) (#t (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 67:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:132:2 (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (else (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b))) (BoolV #f)) (#t (error (quote prim-lte?) \"ZNQR: must input numbers only for <=\")))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 68:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:5 (and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (<= (NumV-n a) (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 69:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:5 (and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 70:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:5 (and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (<= (NumV-n a) (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 71:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:5 (and (and (NumV? a) (NumV? b)) (<= (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 72:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 73:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 74:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 75:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:133:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 76:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:5 (and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (> (NumV-n a) (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 77:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:5 (and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 78:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:5 (and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (> (NumV-n a) (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 79:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:5 (and (and (NumV? a) (NumV? b)) (> (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #t)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 80:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 81:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 82:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 83:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:134:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 84:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 85:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) (#f (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 86:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) (#f (BoolV #t)) (else (BoolV #f)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 87:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 88:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 89:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) (#t (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV #t)) (else (BoolV #f)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 90:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) (#t (BoolV #t)) (else (BoolV #f)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 91:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:141:2 (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b))) (BoolV #t)) ((and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b))) (BoolV #t)) ((and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b))) (BoolV ...>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 92:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:5 (and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (equal? (NumV-n a) (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 93:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:5 (and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 94:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:5 (and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (equal? (NumV-n a) (NumV-n b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 95:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:5 (and (and (NumV? a) (NumV? b)) (equal? (NumV-n a) (NumV-n b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (NumV? a) (NumV? b)) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 96:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 97:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 98:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (NumV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 99:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:142:10 (and (NumV? a) (NumV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (NumV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 100:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:5 (and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (equal? (StringV-str a) (StringV-str b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 101:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:5 (and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (StringV? a) (StringV? b)) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 102:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:5 (and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (equal? (StringV-str a) (StringV-str b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 103:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:5 (and (and (StringV? a) (StringV? b)) (equal? (StringV-str a) (StringV-str b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (StringV? a) (StringV? b)) #t)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 104:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:10 (and (StringV? a) (StringV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (StringV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 105:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:10 (and (StringV? a) (StringV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (StringV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 106:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:10 (and (StringV? a) (StringV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (StringV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 107:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:143:10 (and (StringV? a) (StringV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (StringV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 108:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:5 (and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (equal? (BoolV-boo a) (BoolV-boo b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 109:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:5 (and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (BoolV? a) (BoolV? b)) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 110:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:5 (and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (equal? (BoolV-boo a) (BoolV-boo b)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 111:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:5 (and (and (BoolV? a) (BoolV? b)) (equal? (BoolV-boo a) (BoolV-boo b)))>:#/""/#:MUTANT DESTINATION: #<syntax (and (and (BoolV? a) (BoolV? b)) #t)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 112:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:10 (and (BoolV? a) (BoolV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (BoolV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 113:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:10 (and (BoolV? a) (BoolV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (BoolV? a) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 114:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:10 (and (BoolV? a) (BoolV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (BoolV? b))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 115:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:144:10 (and (BoolV? a) (BoolV? b))>:#/""/#:MUTANT DESTINATION: #<syntax (and (BoolV? a) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 116:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:150:2 (cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 117:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:150:2 (cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (empty? param) (empty? v)) env) (#f (define setting (hash-set env (first param) (first v)))))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 118:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:150:2 (cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 119:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:150:2 (cond ((and (empty? param) (empty? v)) env) (else (define setting (hash-set env (first param) (first v))) (extend-env setting (rest param) (rest v))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((and (empty? param) (empty? v)) env) (#t (define setting (hash-set env (first param) (first v)))))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 120:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:151:5 (and (empty? param) (empty? v))>:#/""/#:MUTANT DESTINATION: #<syntax (and #f (empty? v))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 121:#/""/#:MUTANT USED: RC-and->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:151:5 (and (empty? param) (empty? v))>:#/""/#:MUTANT DESTINATION: #<syntax (and (empty? param) #f)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 122:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:151:5 (and (empty? param) (empty? v))>:#/""/#:MUTANT DESTINATION: #<syntax (and #t (empty? v))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 123:#/""/#:MUTANT USED: RC-and->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:151:5 (and (empty? param) (empty? v))>:#/""/#:MUTANT DESTINATION: #<syntax (and (empty? param) #t)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 124:#/""/#:MUTANT USED: RC-or->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or #f (quote if) (quote ->) (quote =))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 125:#/""/#:MUTANT USED: RC-or->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or (quote var) #f (quote ->) (quote =))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 126:#/""/#:MUTANT USED: RC-or->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or (quote var) (quote if) #f (quote =))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 127:#/""/#:MUTANT USED: RC-or->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or (quote var) (quote if) (quote ->) #f)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 128:#/""/#:MUTANT USED: RC-or->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or #t (quote if) (quote ->) (quote =))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 129:#/""/#:MUTANT USED: RC-or->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or (quote var) #t (quote ->) (quote =))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 130:#/""/#:MUTANT USED: RC-or->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or (quote var) (quote if) #t (quote =))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 131:#/""/#:MUTANT USED: RC-or->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:161:22 (or (quote var) (quote if) (quote ->) (quote =))>:#/""/#:MUTANT DESTINATION: #<syntax (or (quote var) (quote if) (quote ->) #t)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 132:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:165:26 (cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 133:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:165:26 (cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (#f (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 134:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:165:26 (cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 135:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:165:26 (cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (else (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (length exprs) 3) (AppC (IdC (quote if)) (list (parse (first exprs)) (parse (first (rest exprs))) (parse (first (rest (rest exprs))))))) (#t (error (quote parse) \"ZNQR: check arity of ifleq0\")))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 136:#/""/#:MUTANT USED: RC-if->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:171:49 (if (args-same-name? (cast args (Listof Symbol))) (error (quote parse) \"ZNQR: duplicate function arguments\") (LamC (cast args (Listof Symbol)) (parse expr)))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:90:10 (if #f (error (quote parse) \"ZNQR: duplicate function arguments\") (LamC (cast args (Listof Symbol)) (parse expr)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 137:#/""/#:MUTANT USED: RC-if->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:171:49 (if (args-same-name? (cast args (Listof Symbol))) (error (quote parse) \"ZNQR: duplicate function arguments\") (LamC (cast args (Listof Symbol)) (parse expr)))>:#/""/#:MUTANT DESTINATION: #<syntax:mutation-tester.rkt:93:10 (if #t (error (quote parse) \"ZNQR: duplicate function arguments\") (LamC (cast args (Listof Symbol)) (parse expr)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 138:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:174:31 (cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \"ZNQR: duplicate function arguments\")) (else (desugar s)))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (error (quote parse) \"ZNQR: duplicate function arguments\")) (else (desugar s)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 139:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:174:31 (cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \"ZNQR: duplicate function arguments\")) (else (desugar s)))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \"ZNQR: duplicate function arguments\")) (#f (desugar s)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 140:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:174:31 (cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \"ZNQR: duplicate function arguments\")) (else (desugar s)))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (error (quote parse) \"ZNQR: duplicate function arguments\")) (else (desugar s)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 141:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:174:31 (cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \"ZNQR: duplicate function arguments\")) (else (desugar s)))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((args-same-name? (return-ids (cast args Sexp))) (error (quote parse) \"ZNQR: duplicate function arguments\")) (#t (desugar s)))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 142:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:179:37 (cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 143:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:179:37 (cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (#f (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 144:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:179:37 (cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 145:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:179:37 (cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (else (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (length exprs) 2) (AppC (IdC fn) (list (parse (first exprs)) (parse (first (rest exprs)))))) (#t (error (quote parse) \"ZNQR: check arity of binop\")))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 146:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:191:2 (cond ((empty? l) #f) (else (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f #f) (else (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 147:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:191:2 (cond ((empty? l) #f) (else (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((empty? l) #f) (#f (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 148:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:191:2 (cond ((empty? l) #f) (else (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t #f) (else (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 149:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:191:2 (cond ((empty? l) #f) (else (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((empty? l) #f) (#t (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))))>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 150:#/""/#:MUTANT USED: RC-or->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:193:10 (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))>:#/""/#:MUTANT DESTINATION: #<syntax (or #f (args-same-name? (rest l)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 151:#/""/#:MUTANT USED: RC-or->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:193:10 (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))>:#/""/#:MUTANT DESTINATION: #<syntax (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) #f)>:#/""MUTANT_RESULT: passed//##::##//""/#:NUM MUTANT: 152:#/""/#:MUTANT USED: RC-or->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:193:10 (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))>:#/""/#:MUTANT DESTINATION: #<syntax (or #t (args-same-name? (rest l)))>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 153:#/""/#:MUTANT USED: RC-or->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:193:10 (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) (args-same-name? (rest l)))>:#/""/#:MUTANT DESTINATION: #<syntax (or (ormap (λ ((arg : Symbol)) (equal? (first l) arg)) (rest l)) #t)>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 154:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#f (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote var) i...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 155:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) (#f (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote var) i...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 156:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) (#f (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote var) ...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 157:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) (#...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 158:#/""/#:MUTANT USED: RC-cond->false:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 159:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond (#t (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote var) i...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 160:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) (#t (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote var) i...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 161:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) (#t (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote var) ...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 162:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) (#...>:#/""MUTANT_RESULT: failed//##::##//""/#:NUM MUTANT: 163:#/""/#:MUTANT USED: RC-cond->true:#/""/#:MUTANT SOURCE: #<syntax:program3/shuffled-29.rkt:210:51 (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""/#:MUTANT DESTINATION: #<syntax (cond ((equal? (quote ->) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote if) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((equal? (quote =) id) (error (quote return-ids) \"ZNQR: invalid variable name\")) ((...>:#/""MUTANT_RESULT: passed//##::##//""\n\n\nMutation score: 0.853659"